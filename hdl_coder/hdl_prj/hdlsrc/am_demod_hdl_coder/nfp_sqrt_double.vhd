-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj/hdlsrc/am_demod_hdl_coder/nfp_sqrt_double.vhd
-- Created: 2024-12-31 15:57:34
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: nfp_sqrt_double
-- Source Path: am_demod_hdl_coder/AM demodulator/nfp_sqrt_double
-- Hierarchy Level: 1
-- 
-- {Latency Strategy = "Zero", Denormal Handling = "off"}
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY nfp_sqrt_double IS
  PORT( nfp_in                            :   IN    std_logic_vector(63 DOWNTO 0);  -- ufix64
        nfp_out                           :   OUT   std_logic_vector(63 DOWNTO 0)  -- ufix64
        );
END nfp_sqrt_double;


ARCHITECTURE rtl OF nfp_sqrt_double IS

  -- Signals
  SIGNAL nfp_in_unsigned                  : unsigned(63 DOWNTO 0);  -- ufix64
  SIGNAL aSign                            : std_logic;  -- ufix1
  SIGNAL aExponent                        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL aMantissa                        : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL SubSystem12_out1                 : std_logic;  -- ufix1
  SIGNAL SubSystem1_out1                  : std_logic;  -- ufix1
  SIGNAL Logic4_out1                      : std_logic;  -- ufix1
  SIGNAL Delay_PS_1_out1_dtc              : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Constant2_out1                   : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Switch2_out1                     : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Delay10_PS_2_57_out1_is_not0     : std_logic;
  SIGNAL Denormal_Support1_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator7_out1           : std_logic;  -- ufix1
  SIGNAL SubSystem9_out1                  : std_logic;  -- ufix1
  SIGNAL Logic1_out1                      : std_logic;  -- ufix1
  SIGNAL SubSystem6_out1                  : std_logic;  -- ufix1
  SIGNAL SubSystem7_out1                  : std_logic;  -- ufix1
  SIGNAL Denormal_Support_out1            : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1            : std_logic;  -- ufix1
  SIGNAL Logical_Operator1_out1           : std_logic;  -- ufix1
  SIGNAL Logic_out1                       : std_logic;  -- ufix1
  SIGNAL Logical_Operator3_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator2_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator6_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator5_out1           : std_logic;  -- ufix1
  SIGNAL Logical_Operator4_out1           : std_logic;  -- ufix1
  SIGNAL SubSystem17_out1                 : std_logic;  -- ufix1
  SIGNAL Constant4_out1                   : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Switch3_out1                     : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Bit_Slice2_out1                  : std_logic;  -- ufix1
  SIGNAL SubSystem13_out1                 : std_logic;  -- ufix1
  SIGNAL SubSystem14_out1                 : std_logic;  -- ufix1
  SIGNAL Logic4_out1_1                    : std_logic;  -- ufix1
  SIGNAL Constant3_out1                   : std_logic;  -- ufix1
  SIGNAL SubSystem16_out1                 : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Constant2_out1_1                 : std_logic;  -- ufix1
  SIGNAL Constant116_out1                 : std_logic;  -- ufix1
  SIGNAL SubSystem15_out1                 : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Switch2_out1_1                   : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL SubSystem73_out1                 : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL alpha1_out1                      : std_logic;  -- ufix1
  SIGNAL SubSystem1_out1_1                : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Bit_Shift_out1                   : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Switch318_out1                   : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Bit_Slice_out1                   : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL alpha2_out1                      : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Constant_out1                    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Add_sub_cast                     : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Add_sub_cast_1                   : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Add_sub_temp                     : signed(2 DOWNTO 0);  -- sfix3
  SIGNAL Add_out1                         : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1                 : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Slice1_out1                  : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Bit_Concat3_out1                 : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL DataTypeConversion5_out1         : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL SubSystem75_out1                 : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL Bit_Slice_out1_1                 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL DataTypeConversion1_out1         : signed(4 DOWNTO 0);  -- sfix5
  SIGNAL Constant119_out1                 : signed(4 DOWNTO 0);  -- sfix5
  SIGNAL Sum5_out1                        : signed(4 DOWNTO 0);  -- sfix5
  SIGNAL Bit_Slice2_out1_1                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_1          : std_logic;  -- ufix1
  SIGNAL Constant121_out1                 : signed(4 DOWNTO 0);  -- sfix5
  SIGNAL Constant120_out1                 : signed(4 DOWNTO 0);  -- sfix5
  SIGNAL Switch319_out1                   : signed(4 DOWNTO 0);  -- sfix5
  SIGNAL Bit_Slice1_out1_1                : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Bit_Concat_out1                  : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL DataTypeConversion2_out1         : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL Switch320_out1                   : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL Bit_Slice1_out1_2                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Data_Type_Conversion1_out1       : signed(5 DOWNTO 0);  -- sfix6
  SIGNAL bitsll_R_1_out1                  : signed(4 DOWNTO 0);  -- sfix5
  SIGNAL Constant2_out1_2                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_1               : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Data_Type_Conversion2_out1       : signed(5 DOWNTO 0);  -- sfix6
  SIGNAL R_tmp2_out1                      : signed(5 DOWNTO 0);  -- sfix6
  SIGNAL Bit_Slice_out1_2                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_2          : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1                 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL if_tmp3_0_1_out1                 : signed(5 DOWNTO 0);  -- sfix6
  SIGNAL Split_Remainder_accordingly_out1 : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL Bit_Slice2_out1_2                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1  : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Data_Type_Conversion1_out1_1     : signed(6 DOWNTO 0);  -- sfix7
  SIGNAL bitsll_Q_1_1_out1                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Constant_out1_1                  : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1  : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Data_Type_Conversion3_out1       : signed(6 DOWNTO 0);  -- sfix7
  SIGNAL R_tmp2_out1_1                    : signed(6 DOWNTO 0);  -- sfix7
  SIGNAL Bit_Slice_out1_3                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_3          : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1  : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL if_tmp3_0_1_out1_1               : signed(6 DOWNTO 0);  -- sfix7
  SIGNAL Split_Remainder_accordingly_out1_1 : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Bit_Slice1_out1_3                : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL Bit_Slice2_out1_3                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_1 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Data_Type_Conversion1_out1_2     : signed(7 DOWNTO 0);  -- int8
  SIGNAL bitsll_Q_1_1_out1_1              : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Constant_out1_2                  : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_1 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Data_Type_Conversion3_out1_1     : signed(7 DOWNTO 0);  -- int8
  SIGNAL R_tmp2_out1_2                    : signed(7 DOWNTO 0);  -- int8
  SIGNAL Bit_Slice_out1_4                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_4          : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_1 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL if_tmp3_0_1_out1_2               : signed(7 DOWNTO 0);  -- int8
  SIGNAL Split_Remainder_accordingly_out1_2 : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL Bit_Slice1_out1_4                : unsigned(45 DOWNTO 0);  -- ufix46
  SIGNAL Bit_Slice2_out1_4                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Data_Type_Conversion1_out1_3     : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL bitsll_Q_1_1_out1_2              : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Constant_out1_3                  : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Data_Type_Conversion3_out1_2     : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL R_tmp2_out1_3                    : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Bit_Slice_out1_5                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_5          : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_2 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL if_tmp3_0_1_out1_3               : signed(8 DOWNTO 0);  -- sfix9
  SIGNAL Split_Remainder_accordingly_out1_3 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice1_out1_5                : unsigned(43 DOWNTO 0);  -- ufix44
  SIGNAL Bit_Slice2_out1_5                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_3 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Data_Type_Conversion1_out1_4     : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL bitsll_Q_1_1_out1_3              : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Constant_out1_4                  : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_3 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Data_Type_Conversion3_out1_3     : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL R_tmp2_out1_4                    : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL Bit_Slice_out1_6                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_6          : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_3 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL if_tmp3_0_1_out1_4               : signed(9 DOWNTO 0);  -- sfix10
  SIGNAL Split_Remainder_accordingly_out1_4 : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Bit_Slice1_out1_6                : unsigned(41 DOWNTO 0);  -- ufix42
  SIGNAL Bit_Slice2_out1_6                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_4 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Data_Type_Conversion1_out1_5     : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL bitsll_Q_1_1_out1_4              : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Constant_out1_5                  : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_4 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Data_Type_Conversion3_out1_4     : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL R_tmp2_out1_5                    : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Bit_Slice_out1_7                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_7          : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_4 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL if_tmp3_0_1_out1_5               : signed(10 DOWNTO 0);  -- sfix11
  SIGNAL Split_Remainder_accordingly_out1_5 : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Bit_Slice1_out1_7                : unsigned(39 DOWNTO 0);  -- ufix40
  SIGNAL Bit_Slice2_out1_7                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_5 : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Data_Type_Conversion1_out1_6     : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL bitsll_Q_1_1_out1_5              : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Constant_out1_6                  : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_5 : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Data_Type_Conversion3_out1_5     : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL R_tmp2_out1_6                    : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Bit_Slice_out1_8                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_8          : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_5 : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL if_tmp3_0_1_out1_6               : signed(11 DOWNTO 0);  -- sfix12
  SIGNAL Split_Remainder_accordingly_out1_6 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Bit_Slice1_out1_8                : unsigned(37 DOWNTO 0);  -- ufix38
  SIGNAL Bit_Slice2_out1_8                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_6 : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL Data_Type_Conversion1_out1_7     : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL bitsll_Q_1_1_out1_6              : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Constant_out1_7                  : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_6 : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL Data_Type_Conversion3_out1_6     : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL R_tmp2_out1_7                    : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL Bit_Slice_out1_9                 : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_9          : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_6 : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL if_tmp3_0_1_out1_7               : signed(12 DOWNTO 0);  -- sfix13
  SIGNAL Split_Remainder_accordingly_out1_7 : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Bit_Slice1_out1_9                : unsigned(35 DOWNTO 0);  -- ufix36
  SIGNAL Bit_Slice2_out1_9                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_7 : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL Data_Type_Conversion1_out1_8     : signed(13 DOWNTO 0);  -- sfix14
  SIGNAL bitsll_Q_1_1_out1_7              : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL Constant_out1_8                  : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_7 : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL Data_Type_Conversion3_out1_7     : signed(13 DOWNTO 0);  -- sfix14
  SIGNAL R_tmp2_out1_8                    : signed(13 DOWNTO 0);  -- sfix14
  SIGNAL Bit_Slice_out1_10                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_10         : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_7 : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL if_tmp3_0_1_out1_8               : signed(13 DOWNTO 0);  -- sfix14
  SIGNAL Split_Remainder_accordingly_out1_8 : unsigned(12 DOWNTO 0);  -- ufix13
  SIGNAL Bit_Slice1_out1_10               : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL Bit_Slice2_out1_10               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_8 : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL Data_Type_Conversion1_out1_9     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL bitsll_Q_1_1_out1_8              : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL Constant_out1_9                  : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_8 : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL Data_Type_Conversion3_out1_8     : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL R_tmp2_out1_9                    : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL Bit_Slice_out1_11                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_11         : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_8 : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL if_tmp3_0_1_out1_9               : signed(14 DOWNTO 0);  -- sfix15
  SIGNAL Split_Remainder_accordingly_out1_9 : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL Bit_Slice1_out1_11               : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Bit_Slice2_out1_11               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_9 : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Data_Type_Conversion1_out1_10    : signed(15 DOWNTO 0);  -- int16
  SIGNAL bitsll_Q_1_1_out1_9              : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL Constant_out1_10                 : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_9 : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Data_Type_Conversion3_out1_9     : signed(15 DOWNTO 0);  -- int16
  SIGNAL R_tmp2_out1_10                   : signed(15 DOWNTO 0);  -- int16
  SIGNAL Bit_Slice_out1_12                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_12         : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_9 : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL if_tmp3_0_1_out1_10              : signed(15 DOWNTO 0);  -- int16
  SIGNAL Split_Remainder_accordingly_out1_10 : unsigned(14 DOWNTO 0);  -- ufix15
  SIGNAL Bit_Slice1_out1_12               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL Bit_Slice2_out1_12               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_10 : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL Data_Type_Conversion1_out1_11    : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL bitsll_Q_1_1_out1_10             : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Constant_out1_11                 : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_10 : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL Data_Type_Conversion3_out1_10    : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL R_tmp2_out1_11                   : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL Bit_Slice_out1_13                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_13         : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_10 : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL if_tmp3_0_1_out1_11              : signed(16 DOWNTO 0);  -- sfix17
  SIGNAL Split_Remainder_accordingly_out1_11 : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Bit_Slice1_out1_13               : unsigned(27 DOWNTO 0);  -- ufix28
  SIGNAL Bit_Slice2_out1_13               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_11 : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL Data_Type_Conversion1_out1_12    : signed(17 DOWNTO 0);  -- sfix18
  SIGNAL bitsll_Q_1_1_out1_11             : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL Constant_out1_12                 : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_11 : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL Data_Type_Conversion3_out1_11    : signed(17 DOWNTO 0);  -- sfix18
  SIGNAL R_tmp2_out1_12                   : signed(17 DOWNTO 0);  -- sfix18
  SIGNAL Bit_Slice_out1_14                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_14         : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_11 : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL if_tmp3_0_1_out1_12              : signed(17 DOWNTO 0);  -- sfix18
  SIGNAL Split_Remainder_accordingly_out1_12 : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL Bit_Slice1_out1_14               : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL Bit_Slice2_out1_14               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_12 : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Data_Type_Conversion1_out1_13    : signed(18 DOWNTO 0);  -- sfix19
  SIGNAL bitsll_Q_1_1_out1_12             : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL Constant_out1_13                 : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_12 : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Data_Type_Conversion3_out1_12    : signed(18 DOWNTO 0);  -- sfix19
  SIGNAL R_tmp2_out1_13                   : signed(18 DOWNTO 0);  -- sfix19
  SIGNAL Bit_Slice_out1_15                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_15         : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_12 : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL if_tmp3_0_1_out1_13              : signed(18 DOWNTO 0);  -- sfix19
  SIGNAL Split_Remainder_accordingly_out1_13 : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL Bit_Slice1_out1_15               : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Bit_Slice2_out1_15               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_13 : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL Data_Type_Conversion1_out1_14    : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL bitsll_Q_1_1_out1_13             : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Constant_out1_14                 : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_13 : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL Data_Type_Conversion3_out1_13    : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL R_tmp2_out1_14                   : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL Bit_Slice_out1_16                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_16         : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_13 : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL if_tmp3_0_1_out1_14              : signed(19 DOWNTO 0);  -- sfix20
  SIGNAL Split_Remainder_accordingly_out1_14 : unsigned(18 DOWNTO 0);  -- ufix19
  SIGNAL Bit_Slice1_out1_16               : unsigned(21 DOWNTO 0);  -- ufix22
  SIGNAL Bit_Slice2_out1_16               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Build_Quotient_bit_by_bit1_out1_14 : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Data_Type_Conversion1_out1_15    : signed(20 DOWNTO 0);  -- sfix21
  SIGNAL bitsll_Q_1_1_out1_14             : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL Constant_out1_15                 : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit3_out1_14 : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Data_Type_Conversion3_out1_14    : signed(20 DOWNTO 0);  -- sfix21
  SIGNAL R_tmp2_out1_15                   : signed(20 DOWNTO 0);  -- sfix21
  SIGNAL Bit_Slice_out1_17                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_17         : std_logic;  -- ufix1
  SIGNAL Build_Quotient_bit_by_bit2_out1_14 : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL if_tmp3_0_1_out1_15              : signed(20 DOWNTO 0);  -- sfix21
  SIGNAL Bit_Slice1_out1_17               : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL Bit_Slice1_out1_18               : unsigned(19 DOWNTO 0);  -- ufix20
  SIGNAL Bit_Slice2_out1_17               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_1               : unsigned(21 DOWNTO 0);  -- ufix22
  SIGNAL Data_Type_Conversion1_out1_16    : signed(21 DOWNTO 0);  -- sfix22
  SIGNAL bitsll_Q_1_1_out1_15             : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Constant_out1_16                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_1               : unsigned(21 DOWNTO 0);  -- ufix22
  SIGNAL Data_Type_Conversion3_out1_15    : signed(21 DOWNTO 0);  -- sfix22
  SIGNAL R_tmp2_out1_16                   : signed(21 DOWNTO 0);  -- sfix22
  SIGNAL Bit_Slice_out1_18                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_18         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_2               : unsigned(21 DOWNTO 0);  -- ufix22
  SIGNAL if_tmp3_0_1_out1_16              : signed(21 DOWNTO 0);  -- sfix22
  SIGNAL Bit_Slice1_out1_19               : unsigned(20 DOWNTO 0);  -- ufix21
  SIGNAL Bit_Slice3_out1                  : unsigned(17 DOWNTO 0);  -- ufix18
  SIGNAL Bit_Slice2_out1_18               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_2               : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Data_Type_Conversion1_out1_17    : signed(22 DOWNTO 0);  -- sfix23
  SIGNAL bitsll_Q_1_1_out1_16             : unsigned(21 DOWNTO 0);  -- ufix22
  SIGNAL Constant_out1_17                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_2               : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Data_Type_Conversion3_out1_16    : signed(22 DOWNTO 0);  -- sfix23
  SIGNAL R_tmp2_out1_17                   : signed(22 DOWNTO 0);  -- sfix23
  SIGNAL Bit_Slice_out1_19                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_19         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_3               : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL if_tmp3_0_1_out1_17              : signed(22 DOWNTO 0);  -- sfix23
  SIGNAL Bit_Slice1_out1_20               : unsigned(21 DOWNTO 0);  -- ufix22
  SIGNAL Bit_Slice3_out1_1                : unsigned(15 DOWNTO 0);  -- uint16
  SIGNAL Bit_Slice2_out1_19               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_3               : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Data_Type_Conversion1_out1_18    : signed(23 DOWNTO 0);  -- sfix24
  SIGNAL bitsll_Q_1_1_out1_17             : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Constant_out1_18                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_3               : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Data_Type_Conversion3_out1_17    : signed(23 DOWNTO 0);  -- sfix24
  SIGNAL R_tmp2_out1_18                   : signed(23 DOWNTO 0);  -- sfix24
  SIGNAL Bit_Slice_out1_20                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_20         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_4               : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL if_tmp3_0_1_out1_18              : signed(23 DOWNTO 0);  -- sfix24
  SIGNAL Bit_Slice1_out1_21               : unsigned(22 DOWNTO 0);  -- ufix23
  SIGNAL Bit_Slice3_out1_2                : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL Bit_Slice2_out1_20               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_4               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Data_Type_Conversion1_out1_19    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL bitsll_Q_1_1_out1_18             : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Constant_out1_19                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_4               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Data_Type_Conversion3_out1_18    : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL R_tmp2_out1_19                   : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL Bit_Slice_out1_21                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_21         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_5               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL if_tmp3_0_1_out1_19              : signed(24 DOWNTO 0);  -- sfix25
  SIGNAL Bit_Slice1_out1_22               : unsigned(23 DOWNTO 0);  -- ufix24
  SIGNAL Bit_Slice3_out1_3                : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL Bit_Slice2_out1_21               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_5               : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL Data_Type_Conversion1_out1_20    : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL bitsll_Q_1_1_out1_19             : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Constant_out1_20                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_5               : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL Data_Type_Conversion3_out1_19    : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL R_tmp2_out1_20                   : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL Bit_Slice_out1_22                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_22         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_6               : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL if_tmp3_0_1_out1_20              : signed(25 DOWNTO 0);  -- sfix26
  SIGNAL Bit_Slice1_out1_23               : unsigned(24 DOWNTO 0);  -- ufix25
  SIGNAL Bit_Slice3_out1_4                : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Bit_Slice2_out1_22               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_6               : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Data_Type_Conversion1_out1_21    : signed(26 DOWNTO 0);  -- sfix27
  SIGNAL bitsll_Q_1_1_out1_20             : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL Constant_out1_21                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_6               : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Data_Type_Conversion3_out1_20    : signed(26 DOWNTO 0);  -- sfix27
  SIGNAL BitSet2_out1                     : signed(26 DOWNTO 0);  -- sfix27
  SIGNAL R_tmp2_out1_21                   : signed(26 DOWNTO 0);  -- sfix27
  SIGNAL Bit_Slice_out1_23                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_23         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_7               : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL if_tmp3_0_1_out1_21              : signed(26 DOWNTO 0);  -- sfix27
  SIGNAL Bit_Slice1_out1_24               : unsigned(25 DOWNTO 0);  -- ufix26
  SIGNAL Bit_Slice3_out1_5                : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Bit_Slice2_out1_23               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_7               : unsigned(27 DOWNTO 0);  -- ufix28
  SIGNAL Data_Type_Conversion1_out1_22    : signed(27 DOWNTO 0);  -- sfix28
  SIGNAL bitsll_Q_1_1_out1_21             : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Constant_out1_22                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_7               : unsigned(27 DOWNTO 0);  -- ufix28
  SIGNAL Data_Type_Conversion3_out1_21    : signed(27 DOWNTO 0);  -- sfix28
  SIGNAL R_tmp2_out1_22                   : signed(27 DOWNTO 0);  -- sfix28
  SIGNAL Bit_Slice_out1_24                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_24         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_8               : unsigned(27 DOWNTO 0);  -- ufix28
  SIGNAL if_tmp3_0_1_out1_22              : signed(27 DOWNTO 0);  -- sfix28
  SIGNAL Bit_Slice1_out1_25               : unsigned(26 DOWNTO 0);  -- ufix27
  SIGNAL Bit_Slice3_out1_6                : unsigned(5 DOWNTO 0);  -- ufix6
  SIGNAL Bit_Slice2_out1_24               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_8               : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL Data_Type_Conversion1_out1_23    : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL bitsll_Q_1_1_out1_22             : unsigned(27 DOWNTO 0);  -- ufix28
  SIGNAL Constant_out1_23                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_8               : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL Data_Type_Conversion3_out1_22    : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL R_tmp2_out1_23                   : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL Bit_Slice_out1_25                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_25         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_9               : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL if_tmp3_0_1_out1_23              : signed(28 DOWNTO 0);  -- sfix29
  SIGNAL Bit_Slice1_out1_26               : unsigned(27 DOWNTO 0);  -- ufix28
  SIGNAL Bit_Slice3_out1_7                : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL Bit_Slice2_out1_25               : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_9               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL Data_Type_Conversion1_out1_24    : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL bitsll_Q_1_1_out1_23             : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL Constant_out1_24                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_9               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL Data_Type_Conversion3_out1_23    : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL R_tmp2_out1_24                   : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL Bit_Slice_out1_26                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_26         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_10              : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL if_tmp3_0_1_out1_24              : signed(29 DOWNTO 0);  -- sfix30
  SIGNAL Bit_Slice1_out1_27               : unsigned(28 DOWNTO 0);  -- ufix29
  SIGNAL Bit_Slice3_out1_8                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_10              : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Data_Type_Conversion1_out1_25    : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL bitsll_Q_1_1_out1_24             : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL Constant_out1_25                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_10              : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Data_Type_Conversion3_out1_24    : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL R_tmp2_out1_25                   : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL Bit_Slice_out1_27                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_27         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_11              : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL if_tmp3_0_1_out1_25              : signed(30 DOWNTO 0);  -- sfix31
  SIGNAL Bit_Slice1_out1_28               : unsigned(29 DOWNTO 0);  -- ufix30
  SIGNAL Constant1_out1                   : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_11              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Data_Type_Conversion1_out1_26    : signed(31 DOWNTO 0);  -- int32
  SIGNAL bitsll_Q_1_1_out1_25             : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Constant_out1_26                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_11              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Data_Type_Conversion3_out1_25    : signed(31 DOWNTO 0);  -- int32
  SIGNAL R_tmp2_out1_26                   : signed(31 DOWNTO 0);  -- int32
  SIGNAL Bit_Slice_out1_28                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_28         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_12              : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL if_tmp3_0_1_out1_26              : signed(31 DOWNTO 0);  -- int32
  SIGNAL Bit_Slice1_out1_29               : unsigned(30 DOWNTO 0);  -- ufix31
  SIGNAL Constant1_out1_1                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_12              : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL Data_Type_Conversion1_out1_27    : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL bitsll_Q_1_1_out1_26             : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Constant_out1_27                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_12              : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL Data_Type_Conversion3_out1_26    : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL R_tmp2_out1_27                   : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Bit_Slice_out1_29                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_29         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_13              : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL if_tmp3_0_1_out1_27              : signed(32 DOWNTO 0);  -- sfix33
  SIGNAL Bit_Slice1_out1_30               : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL Constant1_out1_2                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_13              : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL Data_Type_Conversion1_out1_28    : signed(33 DOWNTO 0);  -- sfix34
  SIGNAL bitsll_Q_1_1_out1_27             : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL Constant_out1_28                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_13              : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL Data_Type_Conversion3_out1_27    : signed(33 DOWNTO 0);  -- sfix34
  SIGNAL R_tmp2_out1_28                   : signed(33 DOWNTO 0);  -- sfix34
  SIGNAL Bit_Slice_out1_30                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_30         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_14              : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL if_tmp3_0_1_out1_28              : signed(33 DOWNTO 0);  -- sfix34
  SIGNAL Bit_Slice1_out1_31               : unsigned(32 DOWNTO 0);  -- ufix33
  SIGNAL Constant1_out1_3                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_14              : unsigned(34 DOWNTO 0);  -- ufix35
  SIGNAL Data_Type_Conversion1_out1_29    : signed(34 DOWNTO 0);  -- sfix35
  SIGNAL bitsll_Q_1_1_out1_28             : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL Constant_out1_29                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_14              : unsigned(34 DOWNTO 0);  -- ufix35
  SIGNAL Data_Type_Conversion3_out1_28    : signed(34 DOWNTO 0);  -- sfix35
  SIGNAL R_tmp2_out1_29                   : signed(34 DOWNTO 0);  -- sfix35
  SIGNAL Bit_Slice_out1_31                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_31         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_15              : unsigned(34 DOWNTO 0);  -- ufix35
  SIGNAL if_tmp3_0_1_out1_29              : signed(34 DOWNTO 0);  -- sfix35
  SIGNAL Bit_Slice1_out1_32               : unsigned(33 DOWNTO 0);  -- ufix34
  SIGNAL Constant1_out1_4                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_15              : unsigned(35 DOWNTO 0);  -- ufix36
  SIGNAL Data_Type_Conversion1_out1_30    : signed(35 DOWNTO 0);  -- sfix36
  SIGNAL bitsll_Q_1_1_out1_29             : unsigned(34 DOWNTO 0);  -- ufix35
  SIGNAL Constant_out1_30                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_15              : unsigned(35 DOWNTO 0);  -- ufix36
  SIGNAL Data_Type_Conversion3_out1_29    : signed(35 DOWNTO 0);  -- sfix36
  SIGNAL R_tmp2_out1_30                   : signed(35 DOWNTO 0);  -- sfix36
  SIGNAL Bit_Slice_out1_32                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_32         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_16              : unsigned(35 DOWNTO 0);  -- ufix36
  SIGNAL if_tmp3_0_1_out1_30              : signed(35 DOWNTO 0);  -- sfix36
  SIGNAL Bit_Slice1_out1_33               : unsigned(34 DOWNTO 0);  -- ufix35
  SIGNAL Constant1_out1_5                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_16              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL Data_Type_Conversion1_out1_31    : signed(36 DOWNTO 0);  -- sfix37
  SIGNAL bitsll_Q_1_1_out1_30             : unsigned(35 DOWNTO 0);  -- ufix36
  SIGNAL Constant_out1_31                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_16              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL Data_Type_Conversion3_out1_30    : signed(36 DOWNTO 0);  -- sfix37
  SIGNAL R_tmp2_out1_31                   : signed(36 DOWNTO 0);  -- sfix37
  SIGNAL Bit_Slice_out1_33                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_33         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_17              : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL if_tmp3_0_1_out1_31              : signed(36 DOWNTO 0);  -- sfix37
  SIGNAL Bit_Slice1_out1_34               : unsigned(35 DOWNTO 0);  -- ufix36
  SIGNAL Constant1_out1_6                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_17              : unsigned(37 DOWNTO 0);  -- ufix38
  SIGNAL Data_Type_Conversion1_out1_32    : signed(37 DOWNTO 0);  -- sfix38
  SIGNAL bitsll_Q_1_1_out1_31             : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL Constant_out1_32                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_17              : unsigned(37 DOWNTO 0);  -- ufix38
  SIGNAL Data_Type_Conversion3_out1_31    : signed(37 DOWNTO 0);  -- sfix38
  SIGNAL R_tmp2_out1_32                   : signed(37 DOWNTO 0);  -- sfix38
  SIGNAL Bit_Slice_out1_34                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_34         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_18              : unsigned(37 DOWNTO 0);  -- ufix38
  SIGNAL if_tmp3_0_1_out1_32              : signed(37 DOWNTO 0);  -- sfix38
  SIGNAL Bit_Slice1_out1_35               : unsigned(36 DOWNTO 0);  -- ufix37
  SIGNAL Constant1_out1_7                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_18              : unsigned(38 DOWNTO 0);  -- ufix39
  SIGNAL Data_Type_Conversion1_out1_33    : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL bitsll_Q_1_1_out1_32             : unsigned(37 DOWNTO 0);  -- ufix38
  SIGNAL Constant_out1_33                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_18              : unsigned(38 DOWNTO 0);  -- ufix39
  SIGNAL Data_Type_Conversion3_out1_32    : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL R_tmp2_out1_33                   : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL Bit_Slice_out1_35                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_35         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_19              : unsigned(38 DOWNTO 0);  -- ufix39
  SIGNAL if_tmp3_0_1_out1_33              : signed(38 DOWNTO 0);  -- sfix39
  SIGNAL Bit_Slice1_out1_36               : unsigned(37 DOWNTO 0);  -- ufix38
  SIGNAL Constant1_out1_8                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_19              : unsigned(39 DOWNTO 0);  -- ufix40
  SIGNAL Data_Type_Conversion1_out1_34    : signed(39 DOWNTO 0);  -- sfix40
  SIGNAL bitsll_Q_1_1_out1_33             : unsigned(38 DOWNTO 0);  -- ufix39
  SIGNAL Constant_out1_34                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_19              : unsigned(39 DOWNTO 0);  -- ufix40
  SIGNAL Data_Type_Conversion3_out1_33    : signed(39 DOWNTO 0);  -- sfix40
  SIGNAL R_tmp2_out1_34                   : signed(39 DOWNTO 0);  -- sfix40
  SIGNAL Bit_Slice_out1_36                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_36         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_20              : unsigned(39 DOWNTO 0);  -- ufix40
  SIGNAL if_tmp3_0_1_out1_34              : signed(39 DOWNTO 0);  -- sfix40
  SIGNAL Bit_Slice1_out1_37               : unsigned(38 DOWNTO 0);  -- ufix39
  SIGNAL Constant1_out1_9                 : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_20              : unsigned(40 DOWNTO 0);  -- ufix41
  SIGNAL Data_Type_Conversion1_out1_35    : signed(40 DOWNTO 0);  -- sfix41
  SIGNAL bitsll_Q_1_1_out1_34             : unsigned(39 DOWNTO 0);  -- ufix40
  SIGNAL Constant_out1_35                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_20              : unsigned(40 DOWNTO 0);  -- ufix41
  SIGNAL Data_Type_Conversion3_out1_34    : signed(40 DOWNTO 0);  -- sfix41
  SIGNAL R_tmp2_out1_35                   : signed(40 DOWNTO 0);  -- sfix41
  SIGNAL Bit_Slice_out1_37                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_37         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_21              : unsigned(40 DOWNTO 0);  -- ufix41
  SIGNAL if_tmp3_0_1_out1_35              : signed(40 DOWNTO 0);  -- sfix41
  SIGNAL Bit_Slice1_out1_38               : unsigned(39 DOWNTO 0);  -- ufix40
  SIGNAL Constant1_out1_10                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_21              : unsigned(41 DOWNTO 0);  -- ufix42
  SIGNAL Data_Type_Conversion1_out1_36    : signed(41 DOWNTO 0);  -- sfix42
  SIGNAL bitsll_Q_1_2_out1                : unsigned(40 DOWNTO 0);  -- ufix41
  SIGNAL Constant_out1_36                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_21              : unsigned(41 DOWNTO 0);  -- ufix42
  SIGNAL Data_Type_Conversion3_out1_35    : signed(41 DOWNTO 0);  -- sfix42
  SIGNAL R_tmp2_out1_36                   : signed(41 DOWNTO 0);  -- sfix42
  SIGNAL Bit_Slice_out1_38                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_38         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_22              : unsigned(41 DOWNTO 0);  -- ufix42
  SIGNAL if_tmp3_0_1_out1_36              : signed(41 DOWNTO 0);  -- sfix42
  SIGNAL Bit_Slice1_out1_39               : unsigned(40 DOWNTO 0);  -- ufix41
  SIGNAL Constant1_out1_11                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_22              : unsigned(42 DOWNTO 0);  -- ufix43
  SIGNAL Data_Type_Conversion1_out1_37    : signed(42 DOWNTO 0);  -- sfix43
  SIGNAL bitsll_Q_1_2_out1_1              : unsigned(41 DOWNTO 0);  -- ufix42
  SIGNAL Constant_out1_37                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_22              : unsigned(42 DOWNTO 0);  -- ufix43
  SIGNAL Data_Type_Conversion3_out1_36    : signed(42 DOWNTO 0);  -- sfix43
  SIGNAL R_tmp2_out1_37                   : signed(42 DOWNTO 0);  -- sfix43
  SIGNAL Bit_Slice_out1_39                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_39         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_23              : unsigned(42 DOWNTO 0);  -- ufix43
  SIGNAL if_tmp3_0_1_out1_37              : signed(42 DOWNTO 0);  -- sfix43
  SIGNAL Bit_Slice1_out1_40               : unsigned(41 DOWNTO 0);  -- ufix42
  SIGNAL Constant1_out1_12                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_23              : unsigned(43 DOWNTO 0);  -- ufix44
  SIGNAL Data_Type_Conversion1_out1_38    : signed(43 DOWNTO 0);  -- sfix44
  SIGNAL bitsll_Q_1_2_out1_2              : unsigned(42 DOWNTO 0);  -- ufix43
  SIGNAL Constant_out1_38                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_23              : unsigned(43 DOWNTO 0);  -- ufix44
  SIGNAL Data_Type_Conversion3_out1_37    : signed(43 DOWNTO 0);  -- sfix44
  SIGNAL R_tmp2_out1_38                   : signed(43 DOWNTO 0);  -- sfix44
  SIGNAL Bit_Slice_out1_40                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_40         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_24              : unsigned(43 DOWNTO 0);  -- ufix44
  SIGNAL if_tmp3_0_1_out1_38              : signed(43 DOWNTO 0);  -- sfix44
  SIGNAL Bit_Slice1_out1_41               : unsigned(42 DOWNTO 0);  -- ufix43
  SIGNAL Constant1_out1_13                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_24              : unsigned(44 DOWNTO 0);  -- ufix45
  SIGNAL Data_Type_Conversion1_out1_39    : signed(44 DOWNTO 0);  -- sfix45
  SIGNAL bitsll_Q_1_2_out1_3              : unsigned(43 DOWNTO 0);  -- ufix44
  SIGNAL Constant_out1_39                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_24              : unsigned(44 DOWNTO 0);  -- ufix45
  SIGNAL Data_Type_Conversion3_out1_38    : signed(44 DOWNTO 0);  -- sfix45
  SIGNAL R_tmp2_out1_39                   : signed(44 DOWNTO 0);  -- sfix45
  SIGNAL Bit_Slice_out1_41                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_41         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_25              : unsigned(44 DOWNTO 0);  -- ufix45
  SIGNAL if_tmp3_0_1_out1_39              : signed(44 DOWNTO 0);  -- sfix45
  SIGNAL Bit_Slice1_out1_42               : unsigned(43 DOWNTO 0);  -- ufix44
  SIGNAL Constant1_out1_14                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_25              : unsigned(45 DOWNTO 0);  -- ufix46
  SIGNAL Data_Type_Conversion1_out1_40    : signed(45 DOWNTO 0);  -- sfix46
  SIGNAL bitsll_Q_1_2_out1_4              : unsigned(44 DOWNTO 0);  -- ufix45
  SIGNAL Constant_out1_40                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_25              : unsigned(45 DOWNTO 0);  -- ufix46
  SIGNAL Data_Type_Conversion3_out1_39    : signed(45 DOWNTO 0);  -- sfix46
  SIGNAL R_tmp2_out1_40                   : signed(45 DOWNTO 0);  -- sfix46
  SIGNAL Bit_Slice_out1_42                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_42         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_26              : unsigned(45 DOWNTO 0);  -- ufix46
  SIGNAL if_tmp3_0_1_out1_40              : signed(45 DOWNTO 0);  -- sfix46
  SIGNAL Bit_Slice1_out1_43               : unsigned(44 DOWNTO 0);  -- ufix45
  SIGNAL Constant1_out1_15                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_26              : unsigned(46 DOWNTO 0);  -- ufix47
  SIGNAL Data_Type_Conversion1_out1_41    : signed(46 DOWNTO 0);  -- sfix47
  SIGNAL bitsll_Q_1_2_out1_5              : unsigned(45 DOWNTO 0);  -- ufix46
  SIGNAL Constant_out1_41                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_26              : unsigned(46 DOWNTO 0);  -- ufix47
  SIGNAL Data_Type_Conversion3_out1_40    : signed(46 DOWNTO 0);  -- sfix47
  SIGNAL R_tmp2_out1_41                   : signed(46 DOWNTO 0);  -- sfix47
  SIGNAL Bit_Slice_out1_43                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_43         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_27              : unsigned(46 DOWNTO 0);  -- ufix47
  SIGNAL if_tmp3_0_1_out1_41              : signed(46 DOWNTO 0);  -- sfix47
  SIGNAL Bit_Slice1_out1_44               : unsigned(45 DOWNTO 0);  -- ufix46
  SIGNAL Constant1_out1_16                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_27              : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL Data_Type_Conversion1_out1_42    : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL bitsll_Q_1_2_out1_6              : unsigned(46 DOWNTO 0);  -- ufix47
  SIGNAL Constant_out1_42                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_27              : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL Data_Type_Conversion3_out1_41    : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL R_tmp2_out1_42                   : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL Bit_Slice_out1_44                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_44         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_28              : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL if_tmp3_0_1_out1_42              : signed(47 DOWNTO 0);  -- sfix48
  SIGNAL Bit_Slice1_out1_45               : unsigned(46 DOWNTO 0);  -- ufix47
  SIGNAL Constant1_out1_17                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_28              : unsigned(48 DOWNTO 0);  -- ufix49
  SIGNAL Data_Type_Conversion1_out1_43    : signed(48 DOWNTO 0);  -- sfix49
  SIGNAL bitsll_Q_1_2_out1_7              : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL Constant_out1_43                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_28              : unsigned(48 DOWNTO 0);  -- ufix49
  SIGNAL Data_Type_Conversion3_out1_42    : signed(48 DOWNTO 0);  -- sfix49
  SIGNAL R_tmp2_out1_43                   : signed(48 DOWNTO 0);  -- sfix49
  SIGNAL Bit_Slice_out1_45                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_45         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_29              : unsigned(48 DOWNTO 0);  -- ufix49
  SIGNAL if_tmp3_0_1_out1_43              : signed(48 DOWNTO 0);  -- sfix49
  SIGNAL Bit_Slice1_out1_46               : unsigned(47 DOWNTO 0);  -- ufix48
  SIGNAL Constant1_out1_18                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_29              : unsigned(49 DOWNTO 0);  -- ufix50
  SIGNAL Data_Type_Conversion1_out1_44    : signed(49 DOWNTO 0);  -- sfix50
  SIGNAL bitsll_Q_1_2_out1_8              : unsigned(48 DOWNTO 0);  -- ufix49
  SIGNAL Constant_out1_44                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_29              : unsigned(49 DOWNTO 0);  -- ufix50
  SIGNAL Data_Type_Conversion3_out1_43    : signed(49 DOWNTO 0);  -- sfix50
  SIGNAL R_tmp2_out1_44                   : signed(49 DOWNTO 0);  -- sfix50
  SIGNAL Bit_Slice_out1_46                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_46         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_30              : unsigned(49 DOWNTO 0);  -- ufix50
  SIGNAL if_tmp3_0_1_out1_44              : signed(49 DOWNTO 0);  -- sfix50
  SIGNAL Bit_Slice1_out1_47               : unsigned(48 DOWNTO 0);  -- ufix49
  SIGNAL Constant1_out1_19                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_30              : unsigned(50 DOWNTO 0);  -- ufix51
  SIGNAL Data_Type_Conversion1_out1_45    : signed(50 DOWNTO 0);  -- sfix51
  SIGNAL bitsll_Q_1_2_out1_9              : unsigned(49 DOWNTO 0);  -- ufix50
  SIGNAL Constant_out1_45                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_30              : unsigned(50 DOWNTO 0);  -- ufix51
  SIGNAL Data_Type_Conversion3_out1_44    : signed(50 DOWNTO 0);  -- sfix51
  SIGNAL R_tmp2_out1_45                   : signed(50 DOWNTO 0);  -- sfix51
  SIGNAL Bit_Slice_out1_47                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_47         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_31              : unsigned(50 DOWNTO 0);  -- ufix51
  SIGNAL if_tmp3_0_1_out1_45              : signed(50 DOWNTO 0);  -- sfix51
  SIGNAL Bit_Slice1_out1_48               : unsigned(49 DOWNTO 0);  -- ufix50
  SIGNAL Constant1_out1_20                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_31              : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Data_Type_Conversion1_out1_46    : signed(51 DOWNTO 0);  -- sfix52
  SIGNAL bitsll_Q_1_1_out1_35             : unsigned(50 DOWNTO 0);  -- ufix51
  SIGNAL Constant_out1_46                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_31              : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Data_Type_Conversion3_out1_45    : signed(51 DOWNTO 0);  -- sfix52
  SIGNAL R_tmp2_out1_46                   : signed(51 DOWNTO 0);  -- sfix52
  SIGNAL Bit_Slice_out1_48                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_48         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_32              : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL if_tmp3_0_1_out1_46              : signed(51 DOWNTO 0);  -- sfix52
  SIGNAL Bit_Slice1_out1_49               : unsigned(50 DOWNTO 0);  -- ufix51
  SIGNAL Constant1_out1_21                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_32              : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Data_Type_Conversion1_out1_47    : signed(52 DOWNTO 0);  -- sfix53
  SIGNAL bitsll_Q_1_2_out1_10             : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Constant_out1_47                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_32              : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Data_Type_Conversion3_out1_46    : signed(52 DOWNTO 0);  -- sfix53
  SIGNAL R_tmp2_out1_47                   : signed(52 DOWNTO 0);  -- sfix53
  SIGNAL Bit_Slice_out1_49                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_49         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_33              : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL if_tmp3_0_1_out1_47              : signed(52 DOWNTO 0);  -- sfix53
  SIGNAL Bit_Slice1_out1_50               : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Constant1_out1_22                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_33              : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL Data_Type_Conversion1_out1_48    : signed(53 DOWNTO 0);  -- sfix54
  SIGNAL bitsll_Q_1_2_out1_11             : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Constant_out1_48                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_33              : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL Data_Type_Conversion3_out1_47    : signed(53 DOWNTO 0);  -- sfix54
  SIGNAL R_tmp2_out1_48                   : signed(53 DOWNTO 0);  -- sfix54
  SIGNAL Bit_Slice_out1_50                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_50         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_34              : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL if_tmp3_0_1_out1_48              : signed(53 DOWNTO 0);  -- sfix54
  SIGNAL Bit_Slice1_out1_51               : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL Constant1_out1_23                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_34              : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Data_Type_Conversion1_out1_49    : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL bitsll_Q_1_2_out1_12             : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL Constant_out1_49                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_34              : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Data_Type_Conversion3_out1_48    : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL R_tmp2_out1_49                   : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice_out1_51                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_51         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_35              : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL if_tmp3_0_1_out1_49              : signed(54 DOWNTO 0);  -- sfix55
  SIGNAL Bit_Slice1_out1_52               : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL Constant1_out1_24                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_35              : unsigned(55 DOWNTO 0);  -- ufix56
  SIGNAL Data_Type_Conversion1_out1_50    : signed(55 DOWNTO 0);  -- sfix56
  SIGNAL bitsll_Q_1_2_out1_13             : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Constant_out1_50                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_35              : unsigned(55 DOWNTO 0);  -- ufix56
  SIGNAL Data_Type_Conversion3_out1_49    : signed(55 DOWNTO 0);  -- sfix56
  SIGNAL R_tmp2_out1_50                   : signed(55 DOWNTO 0);  -- sfix56
  SIGNAL Bit_Slice_out1_52                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_52         : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_36              : unsigned(55 DOWNTO 0);  -- ufix56
  SIGNAL if_tmp3_0_1_out1_50              : signed(55 DOWNTO 0);  -- sfix56
  SIGNAL Bit_Slice1_out1_53               : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL Constant1_out1_25                : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL Bit_Concat2_out1_36              : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL Data_Type_Conversion1_out1_51    : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL bitsll_Q_1_2_out1_14             : unsigned(55 DOWNTO 0);  -- ufix56
  SIGNAL Constant_out1_51                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat1_out1_36              : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL Data_Type_Conversion3_out1_50    : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL R_tmp2_out1_51                   : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL Bit_Slice_out1_53                : std_logic;  -- ufix1
  SIGNAL Logical_Operator_out1_53         : std_logic;  -- ufix1
  SIGNAL Constant122_out1                 : std_logic;  -- ufix1
  SIGNAL Bit_Concat3_out1_37              : unsigned(56 DOWNTO 0);  -- ufix57
  SIGNAL SubSystem338_out1                : unsigned(52 DOWNTO 0);  -- ufix53
  SIGNAL SubSystem339_out1                : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL SubSystem340_out1                : std_logic;  -- ufix1
  SIGNAL SubSystem341_out1                : std_logic;  -- ufix1
  SIGNAL SubSystem342_out1                : std_logic;  -- ufix1
  SIGNAL SubSystem343_out1                : std_logic;  -- ufix1
  SIGNAL if_tmp3_0_1_out1_51              : signed(56 DOWNTO 0);  -- sfix57
  SIGNAL SubSystem337_out1                : std_logic;  -- ufix1
  SIGNAL Logic5_out1                      : std_logic;  -- ufix1
  SIGNAL Logic6_out1                      : std_logic;  -- ufix1
  SIGNAL Constant123_out1                 : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL Sum58_out1                       : unsigned(54 DOWNTO 0);  -- ufix55
  SIGNAL DataTypeConversion60_out1        : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL Switch425_out1                   : unsigned(53 DOWNTO 0);  -- ufix54
  SIGNAL SubSystem344_out1                : std_logic;  -- ufix1
  SIGNAL SubSystem345_out1                : std_logic;  -- ufix1
  SIGNAL Constant114_out1                 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Sum1_out1                        : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL SubSystem72_out1                 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Constant124_out1                 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Sum59_out1                       : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL DataTypeConversion61_out1        : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Switch426_out1                   : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Constant126_out1                 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Switch_out1                      : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Logic1_out1_1                    : std_logic;  -- ufix1
  SIGNAL SubSystem11_out1                 : std_logic;  -- ufix1
  SIGNAL Logic2_out1                      : std_logic;  -- ufix1
  SIGNAL Logic3_out1                      : std_logic;  -- ufix1
  SIGNAL Constant_out1_52                 : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Switch_out1_1                    : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL Switch429_out1                   : unsigned(10 DOWNTO 0);  -- ufix11
  SIGNAL SubSystem346_out1                : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Constant125_out1                 : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Switch427_out1                   : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Constant127_out1                 : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Switch430_out1                   : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Constant1_out1_26                : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Switch1_out1                     : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL Switch431_out1                   : unsigned(51 DOWNTO 0);  -- ufix52
  SIGNAL nfp_out_pack                     : unsigned(63 DOWNTO 0);  -- ufix64

BEGIN
  nfp_in_unsigned <= unsigned(nfp_in);

  -- Split 64 bit word into FP sign, exponent, mantissa
  aSign <= nfp_in_unsigned(63);
  aExponent <= nfp_in_unsigned(62 DOWNTO 52);
  aMantissa <= nfp_in_unsigned(51 DOWNTO 0);

  
  SubSystem12_out1 <= '1' WHEN aMantissa = to_unsigned(0, 52) ELSE
      '0';

  
  SubSystem1_out1 <= '1' WHEN aExponent = to_unsigned(16#000#, 11) ELSE
      '0';

  Logic4_out1 <= SubSystem12_out1 AND SubSystem1_out1;

  Delay_PS_1_out1_dtc <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & aSign;

  -- Mantissa
  Constant2_out1 <= to_unsigned(0, 52);

  
  Switch2_out1 <= Delay_PS_1_out1_dtc WHEN Logic4_out1 = '0' ELSE
      Constant2_out1;

  
  Delay10_PS_2_57_out1_is_not0 <= '1' WHEN Switch2_out1 /= to_unsigned(0, 52) ELSE
      '0';

  Denormal_Support1_out1 <= '1';

  Logical_Operator7_out1 <= Delay10_PS_2_57_out1_is_not0 AND Denormal_Support1_out1;

  
  SubSystem9_out1 <= '1' WHEN aExponent = to_unsigned(16#7FF#, 11) ELSE
      '0';

  Logic1_out1 <= aSign OR SubSystem9_out1;

  
  SubSystem6_out1 <= '1' WHEN aExponent = to_unsigned(16#000#, 11) ELSE
      '0';

  
  SubSystem7_out1 <= '1' WHEN aMantissa = to_unsigned(0, 52) ELSE
      '0';

  Denormal_Support_out1 <= '0';

  Logical_Operator_out1 <=  NOT Denormal_Support_out1;

  Logical_Operator1_out1 <= SubSystem7_out1 OR Logical_Operator_out1;

  Logic_out1 <= SubSystem6_out1 AND Logical_Operator1_out1;

  Logical_Operator3_out1 <=  NOT Logic_out1;

  Logical_Operator2_out1 <= Logic1_out1 AND Logical_Operator3_out1;

  Logical_Operator6_out1 <= Logical_Operator2_out1 AND Denormal_Support1_out1;

  Logical_Operator5_out1 <=  NOT Denormal_Support1_out1;

  Logical_Operator4_out1 <= Logic_out1 OR Logical_Operator5_out1;

  -- Exponent == 0
  
  SubSystem17_out1 <= '1' WHEN aExponent = to_unsigned(16#000#, 11) ELSE
      '0';

  -- ExponentCorrected
  Constant4_out1 <= to_unsigned(16#001#, 11);

  -- if (Exponent == 0)
  
  Switch3_out1 <= aExponent WHEN SubSystem17_out1 = '0' ELSE
      Constant4_out1;

  Bit_Slice2_out1 <= Switch3_out1(0);

  -- Exponent == 0
  
  SubSystem13_out1 <= '1' WHEN aExponent = to_unsigned(16#000#, 11) ELSE
      '0';

  -- cfType.Exponent_Inf_or_NaN == Exponent
  
  SubSystem14_out1 <= '1' WHEN aExponent = to_unsigned(16#7FF#, 11) ELSE
      '0';

  -- (Exponent == 0) || (cfType.Exponent_Inf_or_NaN == Exponent)
  Logic4_out1_1 <= SubSystem13_out1 OR SubSystem14_out1;

  -- 1
  Constant3_out1 <= '1';

  -- bitconcat(fi(1, 0, 1, 0), Mantissa)
  SubSystem16_out1 <= Constant3_out1 & aMantissa;

  -- 0
  Constant2_out1_1 <= '0';

  -- 0
  Constant116_out1 <= '0';

  -- bitconcat(fi(0, 0, 1, 0), Mantissa)
  SubSystem15_out1 <= Constant2_out1_1 & aMantissa;

  -- if (Exponent == 0) || (cfType.Exponent_Inf_or_NaN == Exponent)
  
  Switch2_out1_1 <= SubSystem16_out1 WHEN Logic4_out1_1 = '0' ELSE
      SubSystem15_out1;

  -- bitconcat(fi(0, 0, 3, 0), mant_a_cor, fi(0, 0, 1, 0))
  SubSystem73_out1 <= Constant116_out1 & Switch2_out1_1;

  alpha1_out1 <= '0';

  -- bitconcat(fi(0, 0, 3, 0), mant_a_cor, fi(0, 0, 1, 0))
  SubSystem1_out1_1 <= SubSystem73_out1 & alpha1_out1;

  Bit_Shift_out1 <= SubSystem1_out1_1 sll 1;

  -- if bitget(exp_a_norm, 1)
  
  Switch318_out1 <= Bit_Shift_out1 WHEN Bit_Slice2_out1 = '0' ELSE
      SubSystem1_out1_1;

  Bit_Slice_out1 <= Switch318_out1(54 DOWNTO 53);

  alpha2_out1 <= to_unsigned(16#0#, 2);

  Constant_out1 <= to_unsigned(16#1#, 2);

  Add_sub_cast <= signed(resize(Bit_Slice_out1, 3));
  Add_sub_cast_1 <= signed(resize(Constant_out1, 3));
  Add_sub_temp <= Add_sub_cast - Add_sub_cast_1;
  Add_out1 <= unsigned(Add_sub_temp(1 DOWNTO 0));

  Bit_Concat2_out1 <= alpha2_out1 & Add_out1;

  Bit_Slice1_out1 <= Switch318_out1(52 DOWNTO 0);

  Bit_Concat3_out1 <= Bit_Concat2_out1 & Bit_Slice1_out1;

  -- reinterpretcast(mant_a_tmp1, numerictype(1, cfType.MantissaLength + 5, 0)) : 
  DataTypeConversion5_out1 <= signed(Bit_Concat3_out1);

  -- bitsll(R, 1)
  SubSystem75_out1 <= DataTypeConversion5_out1 sll 1;

  Bit_Slice_out1_1 <= unsigned(SubSystem75_out1(56 DOWNTO 52));

  DataTypeConversion1_out1 <= signed(Bit_Slice_out1_1);

  -- tmp2
  Constant119_out1 <= to_signed(16#05#, 5);

  -- R - tmp2
  Sum5_out1 <= DataTypeConversion1_out1 - Constant119_out1;

  Bit_Slice2_out1_1 <= Sum5_out1(4);

  Logical_Operator_out1_1 <=  NOT Bit_Slice2_out1_1;

  -- Q
  Constant121_out1 <= to_signed(16#02#, 5);

  -- Q
  Constant120_out1 <= to_signed(16#03#, 5);

  -- if (tmp3 >= 0) : Q
  
  Switch319_out1 <= Constant121_out1 WHEN Logical_Operator_out1_1 = '0' ELSE
      Constant120_out1;

  Bit_Slice1_out1_1 <= unsigned(SubSystem75_out1(51 DOWNTO 0));

  Bit_Concat_out1 <= unsigned(Sum5_out1) & Bit_Slice1_out1_1;

  DataTypeConversion2_out1 <= signed(Bit_Concat_out1);

  -- if (tmp3 >= 0) : R
  
  Switch320_out1 <= SubSystem75_out1 WHEN Logical_Operator_out1_1 = '0' ELSE
      DataTypeConversion2_out1;

  Bit_Slice1_out1_2 <= unsigned(Switch320_out1(55 DOWNTO 50));

  Data_Type_Conversion1_out1 <= signed(Bit_Slice1_out1_2);

  bitsll_R_1_out1 <= Switch319_out1 sll 1;

  Constant2_out1_2 <= '1';

  Bit_Concat3_out1_1 <= unsigned(bitsll_R_1_out1) & Constant2_out1_2;

  Data_Type_Conversion2_out1 <= signed(Bit_Concat3_out1_1);

  R_tmp2_out1 <= Data_Type_Conversion1_out1 - Data_Type_Conversion2_out1;

  Bit_Slice_out1_2 <= R_tmp2_out1(5);

  Logical_Operator_out1_2 <=  NOT Bit_Slice_out1_2;

  Bit_Concat1_out1 <= unsigned(Switch319_out1) & Logical_Operator_out1_2;

  
  if_tmp3_0_1_out1 <= Data_Type_Conversion1_out1 WHEN Logical_Operator_out1_2 = '0' ELSE
      R_tmp2_out1;

  Split_Remainder_accordingly_out1 <= unsigned(if_tmp3_0_1_out1(4 DOWNTO 0));

  Bit_Slice2_out1_2 <= unsigned(Switch320_out1(49 DOWNTO 48));

  Build_Quotient_bit_by_bit1_out1 <= Split_Remainder_accordingly_out1 & Bit_Slice2_out1_2;

  Data_Type_Conversion1_out1_1 <= signed(Build_Quotient_bit_by_bit1_out1);

  bitsll_Q_1_1_out1 <= Bit_Concat1_out1 sll 1;

  Constant_out1_1 <= '1';

  Build_Quotient_bit_by_bit3_out1 <= bitsll_Q_1_1_out1 & Constant_out1_1;

  Data_Type_Conversion3_out1 <= signed(Build_Quotient_bit_by_bit3_out1);

  R_tmp2_out1_1 <= Data_Type_Conversion1_out1_1 - Data_Type_Conversion3_out1;

  Bit_Slice_out1_3 <= R_tmp2_out1_1(6);

  Logical_Operator_out1_3 <=  NOT Bit_Slice_out1_3;

  Build_Quotient_bit_by_bit2_out1 <= Bit_Concat1_out1 & Logical_Operator_out1_3;

  
  if_tmp3_0_1_out1_1 <= Data_Type_Conversion1_out1_1 WHEN Logical_Operator_out1_3 = '0' ELSE
      R_tmp2_out1_1;

  Split_Remainder_accordingly_out1_1 <= unsigned(if_tmp3_0_1_out1_1(5 DOWNTO 0));

  Bit_Slice1_out1_3 <= unsigned(Switch320_out1(47 DOWNTO 0));

  Bit_Slice2_out1_3 <= Bit_Slice1_out1_3(47 DOWNTO 46);

  Build_Quotient_bit_by_bit1_out1_1 <= Split_Remainder_accordingly_out1_1 & Bit_Slice2_out1_3;

  Data_Type_Conversion1_out1_2 <= signed(Build_Quotient_bit_by_bit1_out1_1);

  bitsll_Q_1_1_out1_1 <= Build_Quotient_bit_by_bit2_out1 sll 1;

  Constant_out1_2 <= '1';

  Build_Quotient_bit_by_bit3_out1_1 <= bitsll_Q_1_1_out1_1 & Constant_out1_2;

  Data_Type_Conversion3_out1_1 <= signed(Build_Quotient_bit_by_bit3_out1_1);

  R_tmp2_out1_2 <= Data_Type_Conversion1_out1_2 - Data_Type_Conversion3_out1_1;

  Bit_Slice_out1_4 <= R_tmp2_out1_2(7);

  Logical_Operator_out1_4 <=  NOT Bit_Slice_out1_4;

  Build_Quotient_bit_by_bit2_out1_1 <= Build_Quotient_bit_by_bit2_out1 & Logical_Operator_out1_4;

  
  if_tmp3_0_1_out1_2 <= Data_Type_Conversion1_out1_2 WHEN Logical_Operator_out1_4 = '0' ELSE
      R_tmp2_out1_2;

  Split_Remainder_accordingly_out1_2 <= unsigned(if_tmp3_0_1_out1_2(6 DOWNTO 0));

  Bit_Slice1_out1_4 <= Bit_Slice1_out1_3(45 DOWNTO 0);

  Bit_Slice2_out1_4 <= Bit_Slice1_out1_4(45 DOWNTO 44);

  Build_Quotient_bit_by_bit1_out1_2 <= Split_Remainder_accordingly_out1_2 & Bit_Slice2_out1_4;

  Data_Type_Conversion1_out1_3 <= signed(Build_Quotient_bit_by_bit1_out1_2);

  bitsll_Q_1_1_out1_2 <= Build_Quotient_bit_by_bit2_out1_1 sll 1;

  Constant_out1_3 <= '1';

  Build_Quotient_bit_by_bit3_out1_2 <= bitsll_Q_1_1_out1_2 & Constant_out1_3;

  Data_Type_Conversion3_out1_2 <= signed(Build_Quotient_bit_by_bit3_out1_2);

  R_tmp2_out1_3 <= Data_Type_Conversion1_out1_3 - Data_Type_Conversion3_out1_2;

  Bit_Slice_out1_5 <= R_tmp2_out1_3(8);

  Logical_Operator_out1_5 <=  NOT Bit_Slice_out1_5;

  Build_Quotient_bit_by_bit2_out1_2 <= Build_Quotient_bit_by_bit2_out1_1 & Logical_Operator_out1_5;

  
  if_tmp3_0_1_out1_3 <= Data_Type_Conversion1_out1_3 WHEN Logical_Operator_out1_5 = '0' ELSE
      R_tmp2_out1_3;

  Split_Remainder_accordingly_out1_3 <= unsigned(if_tmp3_0_1_out1_3(7 DOWNTO 0));

  Bit_Slice1_out1_5 <= Bit_Slice1_out1_4(43 DOWNTO 0);

  Bit_Slice2_out1_5 <= Bit_Slice1_out1_5(43 DOWNTO 42);

  Build_Quotient_bit_by_bit1_out1_3 <= Split_Remainder_accordingly_out1_3 & Bit_Slice2_out1_5;

  Data_Type_Conversion1_out1_4 <= signed(Build_Quotient_bit_by_bit1_out1_3);

  bitsll_Q_1_1_out1_3 <= Build_Quotient_bit_by_bit2_out1_2 sll 1;

  Constant_out1_4 <= '1';

  Build_Quotient_bit_by_bit3_out1_3 <= bitsll_Q_1_1_out1_3 & Constant_out1_4;

  Data_Type_Conversion3_out1_3 <= signed(Build_Quotient_bit_by_bit3_out1_3);

  R_tmp2_out1_4 <= Data_Type_Conversion1_out1_4 - Data_Type_Conversion3_out1_3;

  Bit_Slice_out1_6 <= R_tmp2_out1_4(9);

  Logical_Operator_out1_6 <=  NOT Bit_Slice_out1_6;

  Build_Quotient_bit_by_bit2_out1_3 <= Build_Quotient_bit_by_bit2_out1_2 & Logical_Operator_out1_6;

  
  if_tmp3_0_1_out1_4 <= Data_Type_Conversion1_out1_4 WHEN Logical_Operator_out1_6 = '0' ELSE
      R_tmp2_out1_4;

  Split_Remainder_accordingly_out1_4 <= unsigned(if_tmp3_0_1_out1_4(8 DOWNTO 0));

  Bit_Slice1_out1_6 <= Bit_Slice1_out1_5(41 DOWNTO 0);

  Bit_Slice2_out1_6 <= Bit_Slice1_out1_6(41 DOWNTO 40);

  Build_Quotient_bit_by_bit1_out1_4 <= Split_Remainder_accordingly_out1_4 & Bit_Slice2_out1_6;

  Data_Type_Conversion1_out1_5 <= signed(Build_Quotient_bit_by_bit1_out1_4);

  bitsll_Q_1_1_out1_4 <= Build_Quotient_bit_by_bit2_out1_3 sll 1;

  Constant_out1_5 <= '1';

  Build_Quotient_bit_by_bit3_out1_4 <= bitsll_Q_1_1_out1_4 & Constant_out1_5;

  Data_Type_Conversion3_out1_4 <= signed(Build_Quotient_bit_by_bit3_out1_4);

  R_tmp2_out1_5 <= Data_Type_Conversion1_out1_5 - Data_Type_Conversion3_out1_4;

  Bit_Slice_out1_7 <= R_tmp2_out1_5(10);

  Logical_Operator_out1_7 <=  NOT Bit_Slice_out1_7;

  Build_Quotient_bit_by_bit2_out1_4 <= Build_Quotient_bit_by_bit2_out1_3 & Logical_Operator_out1_7;

  
  if_tmp3_0_1_out1_5 <= Data_Type_Conversion1_out1_5 WHEN Logical_Operator_out1_7 = '0' ELSE
      R_tmp2_out1_5;

  Split_Remainder_accordingly_out1_5 <= unsigned(if_tmp3_0_1_out1_5(9 DOWNTO 0));

  Bit_Slice1_out1_7 <= Bit_Slice1_out1_6(39 DOWNTO 0);

  Bit_Slice2_out1_7 <= Bit_Slice1_out1_7(39 DOWNTO 38);

  Build_Quotient_bit_by_bit1_out1_5 <= Split_Remainder_accordingly_out1_5 & Bit_Slice2_out1_7;

  Data_Type_Conversion1_out1_6 <= signed(Build_Quotient_bit_by_bit1_out1_5);

  bitsll_Q_1_1_out1_5 <= Build_Quotient_bit_by_bit2_out1_4 sll 1;

  Constant_out1_6 <= '1';

  Build_Quotient_bit_by_bit3_out1_5 <= bitsll_Q_1_1_out1_5 & Constant_out1_6;

  Data_Type_Conversion3_out1_5 <= signed(Build_Quotient_bit_by_bit3_out1_5);

  R_tmp2_out1_6 <= Data_Type_Conversion1_out1_6 - Data_Type_Conversion3_out1_5;

  Bit_Slice_out1_8 <= R_tmp2_out1_6(11);

  Logical_Operator_out1_8 <=  NOT Bit_Slice_out1_8;

  Build_Quotient_bit_by_bit2_out1_5 <= Build_Quotient_bit_by_bit2_out1_4 & Logical_Operator_out1_8;

  
  if_tmp3_0_1_out1_6 <= Data_Type_Conversion1_out1_6 WHEN Logical_Operator_out1_8 = '0' ELSE
      R_tmp2_out1_6;

  Split_Remainder_accordingly_out1_6 <= unsigned(if_tmp3_0_1_out1_6(10 DOWNTO 0));

  Bit_Slice1_out1_8 <= Bit_Slice1_out1_7(37 DOWNTO 0);

  Bit_Slice2_out1_8 <= Bit_Slice1_out1_8(37 DOWNTO 36);

  Build_Quotient_bit_by_bit1_out1_6 <= Split_Remainder_accordingly_out1_6 & Bit_Slice2_out1_8;

  Data_Type_Conversion1_out1_7 <= signed(Build_Quotient_bit_by_bit1_out1_6);

  bitsll_Q_1_1_out1_6 <= Build_Quotient_bit_by_bit2_out1_5 sll 1;

  Constant_out1_7 <= '1';

  Build_Quotient_bit_by_bit3_out1_6 <= bitsll_Q_1_1_out1_6 & Constant_out1_7;

  Data_Type_Conversion3_out1_6 <= signed(Build_Quotient_bit_by_bit3_out1_6);

  R_tmp2_out1_7 <= Data_Type_Conversion1_out1_7 - Data_Type_Conversion3_out1_6;

  Bit_Slice_out1_9 <= R_tmp2_out1_7(12);

  Logical_Operator_out1_9 <=  NOT Bit_Slice_out1_9;

  Build_Quotient_bit_by_bit2_out1_6 <= Build_Quotient_bit_by_bit2_out1_5 & Logical_Operator_out1_9;

  
  if_tmp3_0_1_out1_7 <= Data_Type_Conversion1_out1_7 WHEN Logical_Operator_out1_9 = '0' ELSE
      R_tmp2_out1_7;

  Split_Remainder_accordingly_out1_7 <= unsigned(if_tmp3_0_1_out1_7(11 DOWNTO 0));

  Bit_Slice1_out1_9 <= Bit_Slice1_out1_8(35 DOWNTO 0);

  Bit_Slice2_out1_9 <= Bit_Slice1_out1_9(35 DOWNTO 34);

  Build_Quotient_bit_by_bit1_out1_7 <= Split_Remainder_accordingly_out1_7 & Bit_Slice2_out1_9;

  Data_Type_Conversion1_out1_8 <= signed(Build_Quotient_bit_by_bit1_out1_7);

  bitsll_Q_1_1_out1_7 <= Build_Quotient_bit_by_bit2_out1_6 sll 1;

  Constant_out1_8 <= '1';

  Build_Quotient_bit_by_bit3_out1_7 <= bitsll_Q_1_1_out1_7 & Constant_out1_8;

  Data_Type_Conversion3_out1_7 <= signed(Build_Quotient_bit_by_bit3_out1_7);

  R_tmp2_out1_8 <= Data_Type_Conversion1_out1_8 - Data_Type_Conversion3_out1_7;

  Bit_Slice_out1_10 <= R_tmp2_out1_8(13);

  Logical_Operator_out1_10 <=  NOT Bit_Slice_out1_10;

  Build_Quotient_bit_by_bit2_out1_7 <= Build_Quotient_bit_by_bit2_out1_6 & Logical_Operator_out1_10;

  
  if_tmp3_0_1_out1_8 <= Data_Type_Conversion1_out1_8 WHEN Logical_Operator_out1_10 = '0' ELSE
      R_tmp2_out1_8;

  Split_Remainder_accordingly_out1_8 <= unsigned(if_tmp3_0_1_out1_8(12 DOWNTO 0));

  Bit_Slice1_out1_10 <= Bit_Slice1_out1_9(33 DOWNTO 0);

  Bit_Slice2_out1_10 <= Bit_Slice1_out1_10(33 DOWNTO 32);

  Build_Quotient_bit_by_bit1_out1_8 <= Split_Remainder_accordingly_out1_8 & Bit_Slice2_out1_10;

  Data_Type_Conversion1_out1_9 <= signed(Build_Quotient_bit_by_bit1_out1_8);

  bitsll_Q_1_1_out1_8 <= Build_Quotient_bit_by_bit2_out1_7 sll 1;

  Constant_out1_9 <= '1';

  Build_Quotient_bit_by_bit3_out1_8 <= bitsll_Q_1_1_out1_8 & Constant_out1_9;

  Data_Type_Conversion3_out1_8 <= signed(Build_Quotient_bit_by_bit3_out1_8);

  R_tmp2_out1_9 <= Data_Type_Conversion1_out1_9 - Data_Type_Conversion3_out1_8;

  Bit_Slice_out1_11 <= R_tmp2_out1_9(14);

  Logical_Operator_out1_11 <=  NOT Bit_Slice_out1_11;

  Build_Quotient_bit_by_bit2_out1_8 <= Build_Quotient_bit_by_bit2_out1_7 & Logical_Operator_out1_11;

  
  if_tmp3_0_1_out1_9 <= Data_Type_Conversion1_out1_9 WHEN Logical_Operator_out1_11 = '0' ELSE
      R_tmp2_out1_9;

  Split_Remainder_accordingly_out1_9 <= unsigned(if_tmp3_0_1_out1_9(13 DOWNTO 0));

  Bit_Slice1_out1_11 <= Bit_Slice1_out1_10(31 DOWNTO 0);

  Bit_Slice2_out1_11 <= Bit_Slice1_out1_11(31 DOWNTO 30);

  Build_Quotient_bit_by_bit1_out1_9 <= Split_Remainder_accordingly_out1_9 & Bit_Slice2_out1_11;

  Data_Type_Conversion1_out1_10 <= signed(Build_Quotient_bit_by_bit1_out1_9);

  bitsll_Q_1_1_out1_9 <= Build_Quotient_bit_by_bit2_out1_8 sll 1;

  Constant_out1_10 <= '1';

  Build_Quotient_bit_by_bit3_out1_9 <= bitsll_Q_1_1_out1_9 & Constant_out1_10;

  Data_Type_Conversion3_out1_9 <= signed(Build_Quotient_bit_by_bit3_out1_9);

  R_tmp2_out1_10 <= Data_Type_Conversion1_out1_10 - Data_Type_Conversion3_out1_9;

  Bit_Slice_out1_12 <= R_tmp2_out1_10(15);

  Logical_Operator_out1_12 <=  NOT Bit_Slice_out1_12;

  Build_Quotient_bit_by_bit2_out1_9 <= Build_Quotient_bit_by_bit2_out1_8 & Logical_Operator_out1_12;

  
  if_tmp3_0_1_out1_10 <= Data_Type_Conversion1_out1_10 WHEN Logical_Operator_out1_12 = '0' ELSE
      R_tmp2_out1_10;

  Split_Remainder_accordingly_out1_10 <= unsigned(if_tmp3_0_1_out1_10(14 DOWNTO 0));

  Bit_Slice1_out1_12 <= Bit_Slice1_out1_11(29 DOWNTO 0);

  Bit_Slice2_out1_12 <= Bit_Slice1_out1_12(29 DOWNTO 28);

  Build_Quotient_bit_by_bit1_out1_10 <= Split_Remainder_accordingly_out1_10 & Bit_Slice2_out1_12;

  Data_Type_Conversion1_out1_11 <= signed(Build_Quotient_bit_by_bit1_out1_10);

  bitsll_Q_1_1_out1_10 <= Build_Quotient_bit_by_bit2_out1_9 sll 1;

  Constant_out1_11 <= '1';

  Build_Quotient_bit_by_bit3_out1_10 <= bitsll_Q_1_1_out1_10 & Constant_out1_11;

  Data_Type_Conversion3_out1_10 <= signed(Build_Quotient_bit_by_bit3_out1_10);

  R_tmp2_out1_11 <= Data_Type_Conversion1_out1_11 - Data_Type_Conversion3_out1_10;

  Bit_Slice_out1_13 <= R_tmp2_out1_11(16);

  Logical_Operator_out1_13 <=  NOT Bit_Slice_out1_13;

  Build_Quotient_bit_by_bit2_out1_10 <= Build_Quotient_bit_by_bit2_out1_9 & Logical_Operator_out1_13;

  
  if_tmp3_0_1_out1_11 <= Data_Type_Conversion1_out1_11 WHEN Logical_Operator_out1_13 = '0' ELSE
      R_tmp2_out1_11;

  Split_Remainder_accordingly_out1_11 <= unsigned(if_tmp3_0_1_out1_11(15 DOWNTO 0));

  Bit_Slice1_out1_13 <= Bit_Slice1_out1_12(27 DOWNTO 0);

  Bit_Slice2_out1_13 <= Bit_Slice1_out1_13(27 DOWNTO 26);

  Build_Quotient_bit_by_bit1_out1_11 <= Split_Remainder_accordingly_out1_11 & Bit_Slice2_out1_13;

  Data_Type_Conversion1_out1_12 <= signed(Build_Quotient_bit_by_bit1_out1_11);

  bitsll_Q_1_1_out1_11 <= Build_Quotient_bit_by_bit2_out1_10 sll 1;

  Constant_out1_12 <= '1';

  Build_Quotient_bit_by_bit3_out1_11 <= bitsll_Q_1_1_out1_11 & Constant_out1_12;

  Data_Type_Conversion3_out1_11 <= signed(Build_Quotient_bit_by_bit3_out1_11);

  R_tmp2_out1_12 <= Data_Type_Conversion1_out1_12 - Data_Type_Conversion3_out1_11;

  Bit_Slice_out1_14 <= R_tmp2_out1_12(17);

  Logical_Operator_out1_14 <=  NOT Bit_Slice_out1_14;

  Build_Quotient_bit_by_bit2_out1_11 <= Build_Quotient_bit_by_bit2_out1_10 & Logical_Operator_out1_14;

  
  if_tmp3_0_1_out1_12 <= Data_Type_Conversion1_out1_12 WHEN Logical_Operator_out1_14 = '0' ELSE
      R_tmp2_out1_12;

  Split_Remainder_accordingly_out1_12 <= unsigned(if_tmp3_0_1_out1_12(16 DOWNTO 0));

  Bit_Slice1_out1_14 <= Bit_Slice1_out1_13(25 DOWNTO 0);

  Bit_Slice2_out1_14 <= Bit_Slice1_out1_14(25 DOWNTO 24);

  Build_Quotient_bit_by_bit1_out1_12 <= Split_Remainder_accordingly_out1_12 & Bit_Slice2_out1_14;

  Data_Type_Conversion1_out1_13 <= signed(Build_Quotient_bit_by_bit1_out1_12);

  bitsll_Q_1_1_out1_12 <= Build_Quotient_bit_by_bit2_out1_11 sll 1;

  Constant_out1_13 <= '1';

  Build_Quotient_bit_by_bit3_out1_12 <= bitsll_Q_1_1_out1_12 & Constant_out1_13;

  Data_Type_Conversion3_out1_12 <= signed(Build_Quotient_bit_by_bit3_out1_12);

  R_tmp2_out1_13 <= Data_Type_Conversion1_out1_13 - Data_Type_Conversion3_out1_12;

  Bit_Slice_out1_15 <= R_tmp2_out1_13(18);

  Logical_Operator_out1_15 <=  NOT Bit_Slice_out1_15;

  Build_Quotient_bit_by_bit2_out1_12 <= Build_Quotient_bit_by_bit2_out1_11 & Logical_Operator_out1_15;

  
  if_tmp3_0_1_out1_13 <= Data_Type_Conversion1_out1_13 WHEN Logical_Operator_out1_15 = '0' ELSE
      R_tmp2_out1_13;

  Split_Remainder_accordingly_out1_13 <= unsigned(if_tmp3_0_1_out1_13(17 DOWNTO 0));

  Bit_Slice1_out1_15 <= Bit_Slice1_out1_14(23 DOWNTO 0);

  Bit_Slice2_out1_15 <= Bit_Slice1_out1_15(23 DOWNTO 22);

  Build_Quotient_bit_by_bit1_out1_13 <= Split_Remainder_accordingly_out1_13 & Bit_Slice2_out1_15;

  Data_Type_Conversion1_out1_14 <= signed(Build_Quotient_bit_by_bit1_out1_13);

  bitsll_Q_1_1_out1_13 <= Build_Quotient_bit_by_bit2_out1_12 sll 1;

  Constant_out1_14 <= '1';

  Build_Quotient_bit_by_bit3_out1_13 <= bitsll_Q_1_1_out1_13 & Constant_out1_14;

  Data_Type_Conversion3_out1_13 <= signed(Build_Quotient_bit_by_bit3_out1_13);

  R_tmp2_out1_14 <= Data_Type_Conversion1_out1_14 - Data_Type_Conversion3_out1_13;

  Bit_Slice_out1_16 <= R_tmp2_out1_14(19);

  Logical_Operator_out1_16 <=  NOT Bit_Slice_out1_16;

  Build_Quotient_bit_by_bit2_out1_13 <= Build_Quotient_bit_by_bit2_out1_12 & Logical_Operator_out1_16;

  
  if_tmp3_0_1_out1_14 <= Data_Type_Conversion1_out1_14 WHEN Logical_Operator_out1_16 = '0' ELSE
      R_tmp2_out1_14;

  Split_Remainder_accordingly_out1_14 <= unsigned(if_tmp3_0_1_out1_14(18 DOWNTO 0));

  Bit_Slice1_out1_16 <= Bit_Slice1_out1_15(21 DOWNTO 0);

  Bit_Slice2_out1_16 <= Bit_Slice1_out1_16(21 DOWNTO 20);

  Build_Quotient_bit_by_bit1_out1_14 <= Split_Remainder_accordingly_out1_14 & Bit_Slice2_out1_16;

  Data_Type_Conversion1_out1_15 <= signed(Build_Quotient_bit_by_bit1_out1_14);

  bitsll_Q_1_1_out1_14 <= Build_Quotient_bit_by_bit2_out1_13 sll 1;

  Constant_out1_15 <= '1';

  Build_Quotient_bit_by_bit3_out1_14 <= bitsll_Q_1_1_out1_14 & Constant_out1_15;

  Data_Type_Conversion3_out1_14 <= signed(Build_Quotient_bit_by_bit3_out1_14);

  R_tmp2_out1_15 <= Data_Type_Conversion1_out1_15 - Data_Type_Conversion3_out1_14;

  Bit_Slice_out1_17 <= R_tmp2_out1_15(20);

  Logical_Operator_out1_17 <=  NOT Bit_Slice_out1_17;

  Build_Quotient_bit_by_bit2_out1_14 <= Build_Quotient_bit_by_bit2_out1_13 & Logical_Operator_out1_17;

  
  if_tmp3_0_1_out1_15 <= Data_Type_Conversion1_out1_15 WHEN Logical_Operator_out1_17 = '0' ELSE
      R_tmp2_out1_15;

  Bit_Slice1_out1_17 <= unsigned(if_tmp3_0_1_out1_15(19 DOWNTO 0));

  Bit_Slice1_out1_18 <= Bit_Slice1_out1_16(19 DOWNTO 0);

  Bit_Slice2_out1_17 <= Bit_Slice1_out1_18(19 DOWNTO 18);

  Bit_Concat2_out1_1 <= Bit_Slice1_out1_17 & Bit_Slice2_out1_17;

  Data_Type_Conversion1_out1_16 <= signed(Bit_Concat2_out1_1);

  bitsll_Q_1_1_out1_15 <= Build_Quotient_bit_by_bit2_out1_14 sll 1;

  Constant_out1_16 <= '1';

  Bit_Concat1_out1_1 <= bitsll_Q_1_1_out1_15 & Constant_out1_16;

  Data_Type_Conversion3_out1_15 <= signed(Bit_Concat1_out1_1);

  R_tmp2_out1_16 <= Data_Type_Conversion1_out1_16 - Data_Type_Conversion3_out1_15;

  Bit_Slice_out1_18 <= R_tmp2_out1_16(21);

  Logical_Operator_out1_18 <=  NOT Bit_Slice_out1_18;

  Bit_Concat3_out1_2 <= Build_Quotient_bit_by_bit2_out1_14 & Logical_Operator_out1_18;

  
  if_tmp3_0_1_out1_16 <= Data_Type_Conversion1_out1_16 WHEN Logical_Operator_out1_18 = '0' ELSE
      R_tmp2_out1_16;

  Bit_Slice1_out1_19 <= unsigned(if_tmp3_0_1_out1_16(20 DOWNTO 0));

  Bit_Slice3_out1 <= Bit_Slice1_out1_18(17 DOWNTO 0);

  Bit_Slice2_out1_18 <= Bit_Slice3_out1(17 DOWNTO 16);

  Bit_Concat2_out1_2 <= Bit_Slice1_out1_19 & Bit_Slice2_out1_18;

  Data_Type_Conversion1_out1_17 <= signed(Bit_Concat2_out1_2);

  bitsll_Q_1_1_out1_16 <= Bit_Concat3_out1_2 sll 1;

  Constant_out1_17 <= '1';

  Bit_Concat1_out1_2 <= bitsll_Q_1_1_out1_16 & Constant_out1_17;

  Data_Type_Conversion3_out1_16 <= signed(Bit_Concat1_out1_2);

  R_tmp2_out1_17 <= Data_Type_Conversion1_out1_17 - Data_Type_Conversion3_out1_16;

  Bit_Slice_out1_19 <= R_tmp2_out1_17(22);

  Logical_Operator_out1_19 <=  NOT Bit_Slice_out1_19;

  Bit_Concat3_out1_3 <= Bit_Concat3_out1_2 & Logical_Operator_out1_19;

  
  if_tmp3_0_1_out1_17 <= Data_Type_Conversion1_out1_17 WHEN Logical_Operator_out1_19 = '0' ELSE
      R_tmp2_out1_17;

  Bit_Slice1_out1_20 <= unsigned(if_tmp3_0_1_out1_17(21 DOWNTO 0));

  Bit_Slice3_out1_1 <= Bit_Slice3_out1(15 DOWNTO 0);

  Bit_Slice2_out1_19 <= Bit_Slice3_out1_1(15 DOWNTO 14);

  Bit_Concat2_out1_3 <= Bit_Slice1_out1_20 & Bit_Slice2_out1_19;

  Data_Type_Conversion1_out1_18 <= signed(Bit_Concat2_out1_3);

  bitsll_Q_1_1_out1_17 <= Bit_Concat3_out1_3 sll 1;

  Constant_out1_18 <= '1';

  Bit_Concat1_out1_3 <= bitsll_Q_1_1_out1_17 & Constant_out1_18;

  Data_Type_Conversion3_out1_17 <= signed(Bit_Concat1_out1_3);

  R_tmp2_out1_18 <= Data_Type_Conversion1_out1_18 - Data_Type_Conversion3_out1_17;

  Bit_Slice_out1_20 <= R_tmp2_out1_18(23);

  Logical_Operator_out1_20 <=  NOT Bit_Slice_out1_20;

  Bit_Concat3_out1_4 <= Bit_Concat3_out1_3 & Logical_Operator_out1_20;

  
  if_tmp3_0_1_out1_18 <= Data_Type_Conversion1_out1_18 WHEN Logical_Operator_out1_20 = '0' ELSE
      R_tmp2_out1_18;

  Bit_Slice1_out1_21 <= unsigned(if_tmp3_0_1_out1_18(22 DOWNTO 0));

  Bit_Slice3_out1_2 <= Bit_Slice3_out1_1(13 DOWNTO 0);

  Bit_Slice2_out1_20 <= Bit_Slice3_out1_2(13 DOWNTO 12);

  Bit_Concat2_out1_4 <= Bit_Slice1_out1_21 & Bit_Slice2_out1_20;

  Data_Type_Conversion1_out1_19 <= signed(Bit_Concat2_out1_4);

  bitsll_Q_1_1_out1_18 <= Bit_Concat3_out1_4 sll 1;

  Constant_out1_19 <= '1';

  Bit_Concat1_out1_4 <= bitsll_Q_1_1_out1_18 & Constant_out1_19;

  Data_Type_Conversion3_out1_18 <= signed(Bit_Concat1_out1_4);

  R_tmp2_out1_19 <= Data_Type_Conversion1_out1_19 - Data_Type_Conversion3_out1_18;

  Bit_Slice_out1_21 <= R_tmp2_out1_19(24);

  Logical_Operator_out1_21 <=  NOT Bit_Slice_out1_21;

  Bit_Concat3_out1_5 <= Bit_Concat3_out1_4 & Logical_Operator_out1_21;

  
  if_tmp3_0_1_out1_19 <= Data_Type_Conversion1_out1_19 WHEN Logical_Operator_out1_21 = '0' ELSE
      R_tmp2_out1_19;

  Bit_Slice1_out1_22 <= unsigned(if_tmp3_0_1_out1_19(23 DOWNTO 0));

  Bit_Slice3_out1_3 <= Bit_Slice3_out1_2(11 DOWNTO 0);

  Bit_Slice2_out1_21 <= Bit_Slice3_out1_3(11 DOWNTO 10);

  Bit_Concat2_out1_5 <= Bit_Slice1_out1_22 & Bit_Slice2_out1_21;

  Data_Type_Conversion1_out1_20 <= signed(Bit_Concat2_out1_5);

  bitsll_Q_1_1_out1_19 <= Bit_Concat3_out1_5 sll 1;

  Constant_out1_20 <= '1';

  Bit_Concat1_out1_5 <= bitsll_Q_1_1_out1_19 & Constant_out1_20;

  Data_Type_Conversion3_out1_19 <= signed(Bit_Concat1_out1_5);

  R_tmp2_out1_20 <= Data_Type_Conversion1_out1_20 - Data_Type_Conversion3_out1_19;

  Bit_Slice_out1_22 <= R_tmp2_out1_20(25);

  Logical_Operator_out1_22 <=  NOT Bit_Slice_out1_22;

  Bit_Concat3_out1_6 <= Bit_Concat3_out1_5 & Logical_Operator_out1_22;

  
  if_tmp3_0_1_out1_20 <= Data_Type_Conversion1_out1_20 WHEN Logical_Operator_out1_22 = '0' ELSE
      R_tmp2_out1_20;

  Bit_Slice1_out1_23 <= unsigned(if_tmp3_0_1_out1_20(24 DOWNTO 0));

  Bit_Slice3_out1_4 <= Bit_Slice3_out1_3(9 DOWNTO 0);

  Bit_Slice2_out1_22 <= Bit_Slice3_out1_4(9 DOWNTO 8);

  Bit_Concat2_out1_6 <= Bit_Slice1_out1_23 & Bit_Slice2_out1_22;

  Data_Type_Conversion1_out1_21 <= signed(Bit_Concat2_out1_6);

  bitsll_Q_1_1_out1_20 <= Bit_Concat3_out1_6 sll 1;

  Constant_out1_21 <= '1';

  Bit_Concat1_out1_6 <= bitsll_Q_1_1_out1_20 & Constant_out1_21;

  Data_Type_Conversion3_out1_20 <= signed(Bit_Concat1_out1_6);

  BitSet2_out1 <= Data_Type_Conversion3_out1_20 OR to_signed(16#0000001#, 27);

  R_tmp2_out1_21 <= Data_Type_Conversion1_out1_21 - BitSet2_out1;

  Bit_Slice_out1_23 <= R_tmp2_out1_21(26);

  Logical_Operator_out1_23 <=  NOT Bit_Slice_out1_23;

  Bit_Concat3_out1_7 <= Bit_Concat3_out1_6 & Logical_Operator_out1_23;

  
  if_tmp3_0_1_out1_21 <= R_tmp2_out1_21 WHEN Bit_Slice_out1_23 = '0' ELSE
      Data_Type_Conversion1_out1_21;

  Bit_Slice1_out1_24 <= unsigned(if_tmp3_0_1_out1_21(25 DOWNTO 0));

  Bit_Slice3_out1_5 <= Bit_Slice3_out1_4(7 DOWNTO 0);

  Bit_Slice2_out1_23 <= Bit_Slice3_out1_5(7 DOWNTO 6);

  Bit_Concat2_out1_7 <= Bit_Slice1_out1_24 & Bit_Slice2_out1_23;

  Data_Type_Conversion1_out1_22 <= signed(Bit_Concat2_out1_7);

  bitsll_Q_1_1_out1_21 <= Bit_Concat3_out1_7 sll 1;

  Constant_out1_22 <= '1';

  Bit_Concat1_out1_7 <= bitsll_Q_1_1_out1_21 & Constant_out1_22;

  Data_Type_Conversion3_out1_21 <= signed(Bit_Concat1_out1_7);

  R_tmp2_out1_22 <= Data_Type_Conversion1_out1_22 - Data_Type_Conversion3_out1_21;

  Bit_Slice_out1_24 <= R_tmp2_out1_22(27);

  Logical_Operator_out1_24 <=  NOT Bit_Slice_out1_24;

  Bit_Concat3_out1_8 <= Bit_Concat3_out1_7 & Logical_Operator_out1_24;

  
  if_tmp3_0_1_out1_22 <= R_tmp2_out1_22 WHEN Bit_Slice_out1_24 = '0' ELSE
      Data_Type_Conversion1_out1_22;

  Bit_Slice1_out1_25 <= unsigned(if_tmp3_0_1_out1_22(26 DOWNTO 0));

  Bit_Slice3_out1_6 <= Bit_Slice3_out1_5(5 DOWNTO 0);

  Bit_Slice2_out1_24 <= Bit_Slice3_out1_6(5 DOWNTO 4);

  Bit_Concat2_out1_8 <= Bit_Slice1_out1_25 & Bit_Slice2_out1_24;

  Data_Type_Conversion1_out1_23 <= signed(Bit_Concat2_out1_8);

  bitsll_Q_1_1_out1_22 <= Bit_Concat3_out1_8 sll 1;

  Constant_out1_23 <= '1';

  Bit_Concat1_out1_8 <= bitsll_Q_1_1_out1_22 & Constant_out1_23;

  Data_Type_Conversion3_out1_22 <= signed(Bit_Concat1_out1_8);

  R_tmp2_out1_23 <= Data_Type_Conversion1_out1_23 - Data_Type_Conversion3_out1_22;

  Bit_Slice_out1_25 <= R_tmp2_out1_23(28);

  Logical_Operator_out1_25 <=  NOT Bit_Slice_out1_25;

  Bit_Concat3_out1_9 <= Bit_Concat3_out1_8 & Logical_Operator_out1_25;

  
  if_tmp3_0_1_out1_23 <= R_tmp2_out1_23 WHEN Bit_Slice_out1_25 = '0' ELSE
      Data_Type_Conversion1_out1_23;

  Bit_Slice1_out1_26 <= unsigned(if_tmp3_0_1_out1_23(27 DOWNTO 0));

  Bit_Slice3_out1_7 <= Bit_Slice3_out1_6(3 DOWNTO 0);

  Bit_Slice2_out1_25 <= Bit_Slice3_out1_7(3 DOWNTO 2);

  Bit_Concat2_out1_9 <= Bit_Slice1_out1_26 & Bit_Slice2_out1_25;

  Data_Type_Conversion1_out1_24 <= signed(Bit_Concat2_out1_9);

  bitsll_Q_1_1_out1_23 <= Bit_Concat3_out1_9 sll 1;

  Constant_out1_24 <= '1';

  Bit_Concat1_out1_9 <= bitsll_Q_1_1_out1_23 & Constant_out1_24;

  Data_Type_Conversion3_out1_23 <= signed(Bit_Concat1_out1_9);

  R_tmp2_out1_24 <= Data_Type_Conversion1_out1_24 - Data_Type_Conversion3_out1_23;

  Bit_Slice_out1_26 <= R_tmp2_out1_24(29);

  Logical_Operator_out1_26 <=  NOT Bit_Slice_out1_26;

  Bit_Concat3_out1_10 <= Bit_Concat3_out1_9 & Logical_Operator_out1_26;

  
  if_tmp3_0_1_out1_24 <= R_tmp2_out1_24 WHEN Bit_Slice_out1_26 = '0' ELSE
      Data_Type_Conversion1_out1_24;

  Bit_Slice1_out1_27 <= unsigned(if_tmp3_0_1_out1_24(28 DOWNTO 0));

  Bit_Slice3_out1_8 <= Bit_Slice3_out1_7(1 DOWNTO 0);

  Bit_Concat2_out1_10 <= Bit_Slice1_out1_27 & Bit_Slice3_out1_8;

  Data_Type_Conversion1_out1_25 <= signed(Bit_Concat2_out1_10);

  bitsll_Q_1_1_out1_24 <= Bit_Concat3_out1_10 sll 1;

  Constant_out1_25 <= '1';

  Bit_Concat1_out1_10 <= bitsll_Q_1_1_out1_24 & Constant_out1_25;

  Data_Type_Conversion3_out1_24 <= signed(Bit_Concat1_out1_10);

  R_tmp2_out1_25 <= Data_Type_Conversion1_out1_25 - Data_Type_Conversion3_out1_24;

  Bit_Slice_out1_27 <= R_tmp2_out1_25(30);

  Logical_Operator_out1_27 <=  NOT Bit_Slice_out1_27;

  Bit_Concat3_out1_11 <= Bit_Concat3_out1_10 & Logical_Operator_out1_27;

  
  if_tmp3_0_1_out1_25 <= R_tmp2_out1_25 WHEN Bit_Slice_out1_27 = '0' ELSE
      Data_Type_Conversion1_out1_25;

  Bit_Slice1_out1_28 <= unsigned(if_tmp3_0_1_out1_25(29 DOWNTO 0));

  Constant1_out1 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_11 <= Bit_Slice1_out1_28 & Constant1_out1;

  Data_Type_Conversion1_out1_26 <= signed(Bit_Concat2_out1_11);

  bitsll_Q_1_1_out1_25 <= Bit_Concat3_out1_11 sll 1;

  Constant_out1_26 <= '1';

  Bit_Concat1_out1_11 <= bitsll_Q_1_1_out1_25 & Constant_out1_26;

  Data_Type_Conversion3_out1_25 <= signed(Bit_Concat1_out1_11);

  R_tmp2_out1_26 <= Data_Type_Conversion1_out1_26 - Data_Type_Conversion3_out1_25;

  Bit_Slice_out1_28 <= R_tmp2_out1_26(31);

  Logical_Operator_out1_28 <=  NOT Bit_Slice_out1_28;

  Bit_Concat3_out1_12 <= Bit_Concat3_out1_11 & Logical_Operator_out1_28;

  
  if_tmp3_0_1_out1_26 <= R_tmp2_out1_26 WHEN Bit_Slice_out1_28 = '0' ELSE
      Data_Type_Conversion1_out1_26;

  Bit_Slice1_out1_29 <= unsigned(if_tmp3_0_1_out1_26(30 DOWNTO 0));

  Constant1_out1_1 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_12 <= Bit_Slice1_out1_29 & Constant1_out1_1;

  Data_Type_Conversion1_out1_27 <= signed(Bit_Concat2_out1_12);

  bitsll_Q_1_1_out1_26 <= Bit_Concat3_out1_12 sll 1;

  Constant_out1_27 <= '1';

  Bit_Concat1_out1_12 <= bitsll_Q_1_1_out1_26 & Constant_out1_27;

  Data_Type_Conversion3_out1_26 <= signed(Bit_Concat1_out1_12);

  R_tmp2_out1_27 <= Data_Type_Conversion1_out1_27 - Data_Type_Conversion3_out1_26;

  Bit_Slice_out1_29 <= R_tmp2_out1_27(32);

  Logical_Operator_out1_29 <=  NOT Bit_Slice_out1_29;

  Bit_Concat3_out1_13 <= Bit_Concat3_out1_12 & Logical_Operator_out1_29;

  
  if_tmp3_0_1_out1_27 <= R_tmp2_out1_27 WHEN Bit_Slice_out1_29 = '0' ELSE
      Data_Type_Conversion1_out1_27;

  Bit_Slice1_out1_30 <= unsigned(if_tmp3_0_1_out1_27(31 DOWNTO 0));

  Constant1_out1_2 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_13 <= Bit_Slice1_out1_30 & Constant1_out1_2;

  Data_Type_Conversion1_out1_28 <= signed(Bit_Concat2_out1_13);

  bitsll_Q_1_1_out1_27 <= Bit_Concat3_out1_13 sll 1;

  Constant_out1_28 <= '1';

  Bit_Concat1_out1_13 <= bitsll_Q_1_1_out1_27 & Constant_out1_28;

  Data_Type_Conversion3_out1_27 <= signed(Bit_Concat1_out1_13);

  R_tmp2_out1_28 <= Data_Type_Conversion1_out1_28 - Data_Type_Conversion3_out1_27;

  Bit_Slice_out1_30 <= R_tmp2_out1_28(33);

  Logical_Operator_out1_30 <=  NOT Bit_Slice_out1_30;

  Bit_Concat3_out1_14 <= Bit_Concat3_out1_13 & Logical_Operator_out1_30;

  
  if_tmp3_0_1_out1_28 <= R_tmp2_out1_28 WHEN Bit_Slice_out1_30 = '0' ELSE
      Data_Type_Conversion1_out1_28;

  Bit_Slice1_out1_31 <= unsigned(if_tmp3_0_1_out1_28(32 DOWNTO 0));

  Constant1_out1_3 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_14 <= Bit_Slice1_out1_31 & Constant1_out1_3;

  Data_Type_Conversion1_out1_29 <= signed(Bit_Concat2_out1_14);

  bitsll_Q_1_1_out1_28 <= Bit_Concat3_out1_14 sll 1;

  Constant_out1_29 <= '1';

  Bit_Concat1_out1_14 <= bitsll_Q_1_1_out1_28 & Constant_out1_29;

  Data_Type_Conversion3_out1_28 <= signed(Bit_Concat1_out1_14);

  R_tmp2_out1_29 <= Data_Type_Conversion1_out1_29 - Data_Type_Conversion3_out1_28;

  Bit_Slice_out1_31 <= R_tmp2_out1_29(34);

  Logical_Operator_out1_31 <=  NOT Bit_Slice_out1_31;

  Bit_Concat3_out1_15 <= Bit_Concat3_out1_14 & Logical_Operator_out1_31;

  
  if_tmp3_0_1_out1_29 <= R_tmp2_out1_29 WHEN Bit_Slice_out1_31 = '0' ELSE
      Data_Type_Conversion1_out1_29;

  Bit_Slice1_out1_32 <= unsigned(if_tmp3_0_1_out1_29(33 DOWNTO 0));

  Constant1_out1_4 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_15 <= Bit_Slice1_out1_32 & Constant1_out1_4;

  Data_Type_Conversion1_out1_30 <= signed(Bit_Concat2_out1_15);

  bitsll_Q_1_1_out1_29 <= Bit_Concat3_out1_15 sll 1;

  Constant_out1_30 <= '1';

  Bit_Concat1_out1_15 <= bitsll_Q_1_1_out1_29 & Constant_out1_30;

  Data_Type_Conversion3_out1_29 <= signed(Bit_Concat1_out1_15);

  R_tmp2_out1_30 <= Data_Type_Conversion1_out1_30 - Data_Type_Conversion3_out1_29;

  Bit_Slice_out1_32 <= R_tmp2_out1_30(35);

  Logical_Operator_out1_32 <=  NOT Bit_Slice_out1_32;

  Bit_Concat3_out1_16 <= Bit_Concat3_out1_15 & Logical_Operator_out1_32;

  
  if_tmp3_0_1_out1_30 <= R_tmp2_out1_30 WHEN Bit_Slice_out1_32 = '0' ELSE
      Data_Type_Conversion1_out1_30;

  Bit_Slice1_out1_33 <= unsigned(if_tmp3_0_1_out1_30(34 DOWNTO 0));

  Constant1_out1_5 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_16 <= Bit_Slice1_out1_33 & Constant1_out1_5;

  Data_Type_Conversion1_out1_31 <= signed(Bit_Concat2_out1_16);

  bitsll_Q_1_1_out1_30 <= Bit_Concat3_out1_16 sll 1;

  Constant_out1_31 <= '1';

  Bit_Concat1_out1_16 <= bitsll_Q_1_1_out1_30 & Constant_out1_31;

  Data_Type_Conversion3_out1_30 <= signed(Bit_Concat1_out1_16);

  R_tmp2_out1_31 <= Data_Type_Conversion1_out1_31 - Data_Type_Conversion3_out1_30;

  Bit_Slice_out1_33 <= R_tmp2_out1_31(36);

  Logical_Operator_out1_33 <=  NOT Bit_Slice_out1_33;

  Bit_Concat3_out1_17 <= Bit_Concat3_out1_16 & Logical_Operator_out1_33;

  
  if_tmp3_0_1_out1_31 <= R_tmp2_out1_31 WHEN Bit_Slice_out1_33 = '0' ELSE
      Data_Type_Conversion1_out1_31;

  Bit_Slice1_out1_34 <= unsigned(if_tmp3_0_1_out1_31(35 DOWNTO 0));

  Constant1_out1_6 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_17 <= Bit_Slice1_out1_34 & Constant1_out1_6;

  Data_Type_Conversion1_out1_32 <= signed(Bit_Concat2_out1_17);

  bitsll_Q_1_1_out1_31 <= Bit_Concat3_out1_17 sll 1;

  Constant_out1_32 <= '1';

  Bit_Concat1_out1_17 <= bitsll_Q_1_1_out1_31 & Constant_out1_32;

  Data_Type_Conversion3_out1_31 <= signed(Bit_Concat1_out1_17);

  R_tmp2_out1_32 <= Data_Type_Conversion1_out1_32 - Data_Type_Conversion3_out1_31;

  Bit_Slice_out1_34 <= R_tmp2_out1_32(37);

  Logical_Operator_out1_34 <=  NOT Bit_Slice_out1_34;

  Bit_Concat3_out1_18 <= Bit_Concat3_out1_17 & Logical_Operator_out1_34;

  
  if_tmp3_0_1_out1_32 <= R_tmp2_out1_32 WHEN Bit_Slice_out1_34 = '0' ELSE
      Data_Type_Conversion1_out1_32;

  Bit_Slice1_out1_35 <= unsigned(if_tmp3_0_1_out1_32(36 DOWNTO 0));

  Constant1_out1_7 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_18 <= Bit_Slice1_out1_35 & Constant1_out1_7;

  Data_Type_Conversion1_out1_33 <= signed(Bit_Concat2_out1_18);

  bitsll_Q_1_1_out1_32 <= Bit_Concat3_out1_18 sll 1;

  Constant_out1_33 <= '1';

  Bit_Concat1_out1_18 <= bitsll_Q_1_1_out1_32 & Constant_out1_33;

  Data_Type_Conversion3_out1_32 <= signed(Bit_Concat1_out1_18);

  R_tmp2_out1_33 <= Data_Type_Conversion1_out1_33 - Data_Type_Conversion3_out1_32;

  Bit_Slice_out1_35 <= R_tmp2_out1_33(38);

  Logical_Operator_out1_35 <=  NOT Bit_Slice_out1_35;

  Bit_Concat3_out1_19 <= Bit_Concat3_out1_18 & Logical_Operator_out1_35;

  
  if_tmp3_0_1_out1_33 <= R_tmp2_out1_33 WHEN Bit_Slice_out1_35 = '0' ELSE
      Data_Type_Conversion1_out1_33;

  Bit_Slice1_out1_36 <= unsigned(if_tmp3_0_1_out1_33(37 DOWNTO 0));

  Constant1_out1_8 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_19 <= Bit_Slice1_out1_36 & Constant1_out1_8;

  Data_Type_Conversion1_out1_34 <= signed(Bit_Concat2_out1_19);

  bitsll_Q_1_1_out1_33 <= Bit_Concat3_out1_19 sll 1;

  Constant_out1_34 <= '1';

  Bit_Concat1_out1_19 <= bitsll_Q_1_1_out1_33 & Constant_out1_34;

  Data_Type_Conversion3_out1_33 <= signed(Bit_Concat1_out1_19);

  R_tmp2_out1_34 <= Data_Type_Conversion1_out1_34 - Data_Type_Conversion3_out1_33;

  Bit_Slice_out1_36 <= R_tmp2_out1_34(39);

  Logical_Operator_out1_36 <=  NOT Bit_Slice_out1_36;

  Bit_Concat3_out1_20 <= Bit_Concat3_out1_19 & Logical_Operator_out1_36;

  
  if_tmp3_0_1_out1_34 <= R_tmp2_out1_34 WHEN Bit_Slice_out1_36 = '0' ELSE
      Data_Type_Conversion1_out1_34;

  Bit_Slice1_out1_37 <= unsigned(if_tmp3_0_1_out1_34(38 DOWNTO 0));

  Constant1_out1_9 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_20 <= Bit_Slice1_out1_37 & Constant1_out1_9;

  Data_Type_Conversion1_out1_35 <= signed(Bit_Concat2_out1_20);

  bitsll_Q_1_1_out1_34 <= Bit_Concat3_out1_20 sll 1;

  Constant_out1_35 <= '1';

  Bit_Concat1_out1_20 <= bitsll_Q_1_1_out1_34 & Constant_out1_35;

  Data_Type_Conversion3_out1_34 <= signed(Bit_Concat1_out1_20);

  R_tmp2_out1_35 <= Data_Type_Conversion1_out1_35 - Data_Type_Conversion3_out1_34;

  Bit_Slice_out1_37 <= R_tmp2_out1_35(40);

  Logical_Operator_out1_37 <=  NOT Bit_Slice_out1_37;

  Bit_Concat3_out1_21 <= Bit_Concat3_out1_20 & Logical_Operator_out1_37;

  
  if_tmp3_0_1_out1_35 <= R_tmp2_out1_35 WHEN Bit_Slice_out1_37 = '0' ELSE
      Data_Type_Conversion1_out1_35;

  Bit_Slice1_out1_38 <= unsigned(if_tmp3_0_1_out1_35(39 DOWNTO 0));

  Constant1_out1_10 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_21 <= Bit_Slice1_out1_38 & Constant1_out1_10;

  Data_Type_Conversion1_out1_36 <= signed(Bit_Concat2_out1_21);

  bitsll_Q_1_2_out1 <= Bit_Concat3_out1_21 sll 1;

  Constant_out1_36 <= '1';

  Bit_Concat1_out1_21 <= bitsll_Q_1_2_out1 & Constant_out1_36;

  Data_Type_Conversion3_out1_35 <= signed(Bit_Concat1_out1_21);

  R_tmp2_out1_36 <= Data_Type_Conversion1_out1_36 - Data_Type_Conversion3_out1_35;

  Bit_Slice_out1_38 <= R_tmp2_out1_36(41);

  Logical_Operator_out1_38 <=  NOT Bit_Slice_out1_38;

  Bit_Concat3_out1_22 <= Bit_Concat3_out1_21 & Logical_Operator_out1_38;

  
  if_tmp3_0_1_out1_36 <= R_tmp2_out1_36 WHEN Bit_Slice_out1_38 = '0' ELSE
      Data_Type_Conversion1_out1_36;

  Bit_Slice1_out1_39 <= unsigned(if_tmp3_0_1_out1_36(40 DOWNTO 0));

  Constant1_out1_11 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_22 <= Bit_Slice1_out1_39 & Constant1_out1_11;

  Data_Type_Conversion1_out1_37 <= signed(Bit_Concat2_out1_22);

  bitsll_Q_1_2_out1_1 <= Bit_Concat3_out1_22 sll 1;

  Constant_out1_37 <= '1';

  Bit_Concat1_out1_22 <= bitsll_Q_1_2_out1_1 & Constant_out1_37;

  Data_Type_Conversion3_out1_36 <= signed(Bit_Concat1_out1_22);

  R_tmp2_out1_37 <= Data_Type_Conversion1_out1_37 - Data_Type_Conversion3_out1_36;

  Bit_Slice_out1_39 <= R_tmp2_out1_37(42);

  Logical_Operator_out1_39 <=  NOT Bit_Slice_out1_39;

  Bit_Concat3_out1_23 <= Bit_Concat3_out1_22 & Logical_Operator_out1_39;

  
  if_tmp3_0_1_out1_37 <= R_tmp2_out1_37 WHEN Bit_Slice_out1_39 = '0' ELSE
      Data_Type_Conversion1_out1_37;

  Bit_Slice1_out1_40 <= unsigned(if_tmp3_0_1_out1_37(41 DOWNTO 0));

  Constant1_out1_12 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_23 <= Bit_Slice1_out1_40 & Constant1_out1_12;

  Data_Type_Conversion1_out1_38 <= signed(Bit_Concat2_out1_23);

  bitsll_Q_1_2_out1_2 <= Bit_Concat3_out1_23 sll 1;

  Constant_out1_38 <= '1';

  Bit_Concat1_out1_23 <= bitsll_Q_1_2_out1_2 & Constant_out1_38;

  Data_Type_Conversion3_out1_37 <= signed(Bit_Concat1_out1_23);

  R_tmp2_out1_38 <= Data_Type_Conversion1_out1_38 - Data_Type_Conversion3_out1_37;

  Bit_Slice_out1_40 <= R_tmp2_out1_38(43);

  Logical_Operator_out1_40 <=  NOT Bit_Slice_out1_40;

  Bit_Concat3_out1_24 <= Bit_Concat3_out1_23 & Logical_Operator_out1_40;

  
  if_tmp3_0_1_out1_38 <= R_tmp2_out1_38 WHEN Bit_Slice_out1_40 = '0' ELSE
      Data_Type_Conversion1_out1_38;

  Bit_Slice1_out1_41 <= unsigned(if_tmp3_0_1_out1_38(42 DOWNTO 0));

  Constant1_out1_13 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_24 <= Bit_Slice1_out1_41 & Constant1_out1_13;

  Data_Type_Conversion1_out1_39 <= signed(Bit_Concat2_out1_24);

  bitsll_Q_1_2_out1_3 <= Bit_Concat3_out1_24 sll 1;

  Constant_out1_39 <= '1';

  Bit_Concat1_out1_24 <= bitsll_Q_1_2_out1_3 & Constant_out1_39;

  Data_Type_Conversion3_out1_38 <= signed(Bit_Concat1_out1_24);

  R_tmp2_out1_39 <= Data_Type_Conversion1_out1_39 - Data_Type_Conversion3_out1_38;

  Bit_Slice_out1_41 <= R_tmp2_out1_39(44);

  Logical_Operator_out1_41 <=  NOT Bit_Slice_out1_41;

  Bit_Concat3_out1_25 <= Bit_Concat3_out1_24 & Logical_Operator_out1_41;

  
  if_tmp3_0_1_out1_39 <= R_tmp2_out1_39 WHEN Bit_Slice_out1_41 = '0' ELSE
      Data_Type_Conversion1_out1_39;

  Bit_Slice1_out1_42 <= unsigned(if_tmp3_0_1_out1_39(43 DOWNTO 0));

  Constant1_out1_14 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_25 <= Bit_Slice1_out1_42 & Constant1_out1_14;

  Data_Type_Conversion1_out1_40 <= signed(Bit_Concat2_out1_25);

  bitsll_Q_1_2_out1_4 <= Bit_Concat3_out1_25 sll 1;

  Constant_out1_40 <= '1';

  Bit_Concat1_out1_25 <= bitsll_Q_1_2_out1_4 & Constant_out1_40;

  Data_Type_Conversion3_out1_39 <= signed(Bit_Concat1_out1_25);

  R_tmp2_out1_40 <= Data_Type_Conversion1_out1_40 - Data_Type_Conversion3_out1_39;

  Bit_Slice_out1_42 <= R_tmp2_out1_40(45);

  Logical_Operator_out1_42 <=  NOT Bit_Slice_out1_42;

  Bit_Concat3_out1_26 <= Bit_Concat3_out1_25 & Logical_Operator_out1_42;

  
  if_tmp3_0_1_out1_40 <= R_tmp2_out1_40 WHEN Bit_Slice_out1_42 = '0' ELSE
      Data_Type_Conversion1_out1_40;

  Bit_Slice1_out1_43 <= unsigned(if_tmp3_0_1_out1_40(44 DOWNTO 0));

  Constant1_out1_15 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_26 <= Bit_Slice1_out1_43 & Constant1_out1_15;

  Data_Type_Conversion1_out1_41 <= signed(Bit_Concat2_out1_26);

  bitsll_Q_1_2_out1_5 <= Bit_Concat3_out1_26 sll 1;

  Constant_out1_41 <= '1';

  Bit_Concat1_out1_26 <= bitsll_Q_1_2_out1_5 & Constant_out1_41;

  Data_Type_Conversion3_out1_40 <= signed(Bit_Concat1_out1_26);

  R_tmp2_out1_41 <= Data_Type_Conversion1_out1_41 - Data_Type_Conversion3_out1_40;

  Bit_Slice_out1_43 <= R_tmp2_out1_41(46);

  Logical_Operator_out1_43 <=  NOT Bit_Slice_out1_43;

  Bit_Concat3_out1_27 <= Bit_Concat3_out1_26 & Logical_Operator_out1_43;

  
  if_tmp3_0_1_out1_41 <= R_tmp2_out1_41 WHEN Bit_Slice_out1_43 = '0' ELSE
      Data_Type_Conversion1_out1_41;

  Bit_Slice1_out1_44 <= unsigned(if_tmp3_0_1_out1_41(45 DOWNTO 0));

  Constant1_out1_16 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_27 <= Bit_Slice1_out1_44 & Constant1_out1_16;

  Data_Type_Conversion1_out1_42 <= signed(Bit_Concat2_out1_27);

  bitsll_Q_1_2_out1_6 <= Bit_Concat3_out1_27 sll 1;

  Constant_out1_42 <= '1';

  Bit_Concat1_out1_27 <= bitsll_Q_1_2_out1_6 & Constant_out1_42;

  Data_Type_Conversion3_out1_41 <= signed(Bit_Concat1_out1_27);

  R_tmp2_out1_42 <= Data_Type_Conversion1_out1_42 - Data_Type_Conversion3_out1_41;

  Bit_Slice_out1_44 <= R_tmp2_out1_42(47);

  Logical_Operator_out1_44 <=  NOT Bit_Slice_out1_44;

  Bit_Concat3_out1_28 <= Bit_Concat3_out1_27 & Logical_Operator_out1_44;

  
  if_tmp3_0_1_out1_42 <= R_tmp2_out1_42 WHEN Bit_Slice_out1_44 = '0' ELSE
      Data_Type_Conversion1_out1_42;

  Bit_Slice1_out1_45 <= unsigned(if_tmp3_0_1_out1_42(46 DOWNTO 0));

  Constant1_out1_17 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_28 <= Bit_Slice1_out1_45 & Constant1_out1_17;

  Data_Type_Conversion1_out1_43 <= signed(Bit_Concat2_out1_28);

  bitsll_Q_1_2_out1_7 <= Bit_Concat3_out1_28 sll 1;

  Constant_out1_43 <= '1';

  Bit_Concat1_out1_28 <= bitsll_Q_1_2_out1_7 & Constant_out1_43;

  Data_Type_Conversion3_out1_42 <= signed(Bit_Concat1_out1_28);

  R_tmp2_out1_43 <= Data_Type_Conversion1_out1_43 - Data_Type_Conversion3_out1_42;

  Bit_Slice_out1_45 <= R_tmp2_out1_43(48);

  Logical_Operator_out1_45 <=  NOT Bit_Slice_out1_45;

  Bit_Concat3_out1_29 <= Bit_Concat3_out1_28 & Logical_Operator_out1_45;

  
  if_tmp3_0_1_out1_43 <= R_tmp2_out1_43 WHEN Bit_Slice_out1_45 = '0' ELSE
      Data_Type_Conversion1_out1_43;

  Bit_Slice1_out1_46 <= unsigned(if_tmp3_0_1_out1_43(47 DOWNTO 0));

  Constant1_out1_18 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_29 <= Bit_Slice1_out1_46 & Constant1_out1_18;

  Data_Type_Conversion1_out1_44 <= signed(Bit_Concat2_out1_29);

  bitsll_Q_1_2_out1_8 <= Bit_Concat3_out1_29 sll 1;

  Constant_out1_44 <= '1';

  Bit_Concat1_out1_29 <= bitsll_Q_1_2_out1_8 & Constant_out1_44;

  Data_Type_Conversion3_out1_43 <= signed(Bit_Concat1_out1_29);

  R_tmp2_out1_44 <= Data_Type_Conversion1_out1_44 - Data_Type_Conversion3_out1_43;

  Bit_Slice_out1_46 <= R_tmp2_out1_44(49);

  Logical_Operator_out1_46 <=  NOT Bit_Slice_out1_46;

  Bit_Concat3_out1_30 <= Bit_Concat3_out1_29 & Logical_Operator_out1_46;

  
  if_tmp3_0_1_out1_44 <= R_tmp2_out1_44 WHEN Bit_Slice_out1_46 = '0' ELSE
      Data_Type_Conversion1_out1_44;

  Bit_Slice1_out1_47 <= unsigned(if_tmp3_0_1_out1_44(48 DOWNTO 0));

  Constant1_out1_19 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_30 <= Bit_Slice1_out1_47 & Constant1_out1_19;

  Data_Type_Conversion1_out1_45 <= signed(Bit_Concat2_out1_30);

  bitsll_Q_1_2_out1_9 <= Bit_Concat3_out1_30 sll 1;

  Constant_out1_45 <= '1';

  Bit_Concat1_out1_30 <= bitsll_Q_1_2_out1_9 & Constant_out1_45;

  Data_Type_Conversion3_out1_44 <= signed(Bit_Concat1_out1_30);

  R_tmp2_out1_45 <= Data_Type_Conversion1_out1_45 - Data_Type_Conversion3_out1_44;

  Bit_Slice_out1_47 <= R_tmp2_out1_45(50);

  Logical_Operator_out1_47 <=  NOT Bit_Slice_out1_47;

  Bit_Concat3_out1_31 <= Bit_Concat3_out1_30 & Logical_Operator_out1_47;

  
  if_tmp3_0_1_out1_45 <= R_tmp2_out1_45 WHEN Bit_Slice_out1_47 = '0' ELSE
      Data_Type_Conversion1_out1_45;

  Bit_Slice1_out1_48 <= unsigned(if_tmp3_0_1_out1_45(49 DOWNTO 0));

  Constant1_out1_20 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_31 <= Bit_Slice1_out1_48 & Constant1_out1_20;

  Data_Type_Conversion1_out1_46 <= signed(Bit_Concat2_out1_31);

  bitsll_Q_1_1_out1_35 <= Bit_Concat3_out1_31 sll 1;

  Constant_out1_46 <= '1';

  Bit_Concat1_out1_31 <= bitsll_Q_1_1_out1_35 & Constant_out1_46;

  Data_Type_Conversion3_out1_45 <= signed(Bit_Concat1_out1_31);

  R_tmp2_out1_46 <= Data_Type_Conversion1_out1_46 - Data_Type_Conversion3_out1_45;

  Bit_Slice_out1_48 <= R_tmp2_out1_46(51);

  Logical_Operator_out1_48 <=  NOT Bit_Slice_out1_48;

  Bit_Concat3_out1_32 <= Bit_Concat3_out1_31 & Logical_Operator_out1_48;

  
  if_tmp3_0_1_out1_46 <= R_tmp2_out1_46 WHEN Bit_Slice_out1_48 = '0' ELSE
      Data_Type_Conversion1_out1_46;

  Bit_Slice1_out1_49 <= unsigned(if_tmp3_0_1_out1_46(50 DOWNTO 0));

  Constant1_out1_21 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_32 <= Bit_Slice1_out1_49 & Constant1_out1_21;

  Data_Type_Conversion1_out1_47 <= signed(Bit_Concat2_out1_32);

  bitsll_Q_1_2_out1_10 <= Bit_Concat3_out1_32 sll 1;

  Constant_out1_47 <= '1';

  Bit_Concat1_out1_32 <= bitsll_Q_1_2_out1_10 & Constant_out1_47;

  Data_Type_Conversion3_out1_46 <= signed(Bit_Concat1_out1_32);

  R_tmp2_out1_47 <= Data_Type_Conversion1_out1_47 - Data_Type_Conversion3_out1_46;

  Bit_Slice_out1_49 <= R_tmp2_out1_47(52);

  Logical_Operator_out1_49 <=  NOT Bit_Slice_out1_49;

  Bit_Concat3_out1_33 <= Bit_Concat3_out1_32 & Logical_Operator_out1_49;

  
  if_tmp3_0_1_out1_47 <= R_tmp2_out1_47 WHEN Bit_Slice_out1_49 = '0' ELSE
      Data_Type_Conversion1_out1_47;

  Bit_Slice1_out1_50 <= unsigned(if_tmp3_0_1_out1_47(51 DOWNTO 0));

  Constant1_out1_22 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_33 <= Bit_Slice1_out1_50 & Constant1_out1_22;

  Data_Type_Conversion1_out1_48 <= signed(Bit_Concat2_out1_33);

  bitsll_Q_1_2_out1_11 <= Bit_Concat3_out1_33 sll 1;

  Constant_out1_48 <= '1';

  Bit_Concat1_out1_33 <= bitsll_Q_1_2_out1_11 & Constant_out1_48;

  Data_Type_Conversion3_out1_47 <= signed(Bit_Concat1_out1_33);

  R_tmp2_out1_48 <= Data_Type_Conversion1_out1_48 - Data_Type_Conversion3_out1_47;

  Bit_Slice_out1_50 <= R_tmp2_out1_48(53);

  Logical_Operator_out1_50 <=  NOT Bit_Slice_out1_50;

  Bit_Concat3_out1_34 <= Bit_Concat3_out1_33 & Logical_Operator_out1_50;

  
  if_tmp3_0_1_out1_48 <= R_tmp2_out1_48 WHEN Bit_Slice_out1_50 = '0' ELSE
      Data_Type_Conversion1_out1_48;

  Bit_Slice1_out1_51 <= unsigned(if_tmp3_0_1_out1_48(52 DOWNTO 0));

  Constant1_out1_23 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_34 <= Bit_Slice1_out1_51 & Constant1_out1_23;

  Data_Type_Conversion1_out1_49 <= signed(Bit_Concat2_out1_34);

  bitsll_Q_1_2_out1_12 <= Bit_Concat3_out1_34 sll 1;

  Constant_out1_49 <= '1';

  Bit_Concat1_out1_34 <= bitsll_Q_1_2_out1_12 & Constant_out1_49;

  Data_Type_Conversion3_out1_48 <= signed(Bit_Concat1_out1_34);

  R_tmp2_out1_49 <= Data_Type_Conversion1_out1_49 - Data_Type_Conversion3_out1_48;

  Bit_Slice_out1_51 <= R_tmp2_out1_49(54);

  Logical_Operator_out1_51 <=  NOT Bit_Slice_out1_51;

  Bit_Concat3_out1_35 <= Bit_Concat3_out1_34 & Logical_Operator_out1_51;

  
  if_tmp3_0_1_out1_49 <= R_tmp2_out1_49 WHEN Bit_Slice_out1_51 = '0' ELSE
      Data_Type_Conversion1_out1_49;

  Bit_Slice1_out1_52 <= unsigned(if_tmp3_0_1_out1_49(53 DOWNTO 0));

  Constant1_out1_24 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_35 <= Bit_Slice1_out1_52 & Constant1_out1_24;

  Data_Type_Conversion1_out1_50 <= signed(Bit_Concat2_out1_35);

  bitsll_Q_1_2_out1_13 <= Bit_Concat3_out1_35 sll 1;

  Constant_out1_50 <= '1';

  Bit_Concat1_out1_35 <= bitsll_Q_1_2_out1_13 & Constant_out1_50;

  Data_Type_Conversion3_out1_49 <= signed(Bit_Concat1_out1_35);

  R_tmp2_out1_50 <= Data_Type_Conversion1_out1_50 - Data_Type_Conversion3_out1_49;

  Bit_Slice_out1_52 <= R_tmp2_out1_50(55);

  Logical_Operator_out1_52 <=  NOT Bit_Slice_out1_52;

  Bit_Concat3_out1_36 <= Bit_Concat3_out1_35 & Logical_Operator_out1_52;

  
  if_tmp3_0_1_out1_50 <= R_tmp2_out1_50 WHEN Bit_Slice_out1_52 = '0' ELSE
      Data_Type_Conversion1_out1_50;

  Bit_Slice1_out1_53 <= unsigned(if_tmp3_0_1_out1_50(54 DOWNTO 0));

  Constant1_out1_25 <= to_unsigned(16#0#, 2);

  Bit_Concat2_out1_36 <= Bit_Slice1_out1_53 & Constant1_out1_25;

  Data_Type_Conversion1_out1_51 <= signed(Bit_Concat2_out1_36);

  bitsll_Q_1_2_out1_14 <= Bit_Concat3_out1_36 sll 1;

  Constant_out1_51 <= '1';

  Bit_Concat1_out1_36 <= bitsll_Q_1_2_out1_14 & Constant_out1_51;

  Data_Type_Conversion3_out1_50 <= signed(Bit_Concat1_out1_36);

  R_tmp2_out1_51 <= Data_Type_Conversion1_out1_51 - Data_Type_Conversion3_out1_50;

  Bit_Slice_out1_53 <= R_tmp2_out1_51(56);

  Logical_Operator_out1_53 <=  NOT Bit_Slice_out1_53;

  -- 0
  Constant122_out1 <= '0';

  Bit_Concat3_out1_37 <= Bit_Concat3_out1_36 & Logical_Operator_out1_53;

  -- bitsliceget(Q, cfType.MantissaLength + 1, 1)
  SubSystem338_out1 <= Bit_Concat3_out1_37(52 DOWNTO 0);

  -- bitconcat(fi(0, 0, 1, 0), MantExtended)
  SubSystem339_out1 <= Constant122_out1 & SubSystem338_out1;

  -- bitget(Mant_tmp, 1)
  SubSystem340_out1 <= SubSystem339_out1(0);

  -- bitget(Mant_tmp, 1) ~= 0
  
  SubSystem341_out1 <= '1' WHEN SubSystem340_out1 /= '0' ELSE
      '0';

  -- bitget(Mant_tmp, 2)
  SubSystem342_out1 <= SubSystem339_out1(1);

  -- bitget(Mant_tmp, 2) ~= 0
  
  SubSystem343_out1 <= '1' WHEN SubSystem342_out1 /= '0' ELSE
      '0';

  
  if_tmp3_0_1_out1_51 <= R_tmp2_out1_51 WHEN Bit_Slice_out1_53 = '0' ELSE
      Data_Type_Conversion1_out1_51;

  -- R ~= 0
  
  SubSystem337_out1 <= '1' WHEN if_tmp3_0_1_out1_51 /= to_signed(0, 57) ELSE
      '0';

  -- (bitget(Mant_tmp, 2) ~= 0) || sticky
  Logic5_out1 <= SubSystem343_out1 OR SubSystem337_out1;

  -- (bitget(Mant_tmp, 1) ~= 0) && ((bitget(Mant_tmp, 2) ~= 0) || sticky)
  Logic6_out1 <= SubSystem341_out1 AND Logic5_out1;

  -- cast(2, like, Mant_tmp)
  Constant123_out1 <= to_unsigned(2, 54);

  -- Mant_tmp + cast(2, like, Mant_tmp)
  Sum58_out1 <= resize(SubSystem339_out1, 55) + resize(Constant123_out1, 55);

  -- dtc
  DataTypeConversion60_out1 <= Sum58_out1(53 DOWNTO 0);

  -- if (bitget(Mant_tmp, 1) ~= 0) && ((bitget(Mant_tmp, 2) ~= 0) || sticky)
  
  Switch425_out1 <= SubSystem339_out1 WHEN Logic6_out1 = '0' ELSE
      DataTypeConversion60_out1;

  -- bitget(Mant_tmp, Mant_tmp.WordLength)
  SubSystem344_out1 <= Switch425_out1(53);

  -- bitget(Mant_tmp, Mant_tmp.WordLength) ~= 0
  
  SubSystem345_out1 <= '1' WHEN SubSystem344_out1 /= '0' ELSE
      '0';

  -- fi(cfType.ExponentBias, 0, cfType.ExponentLength + 1, 0)
  Constant114_out1 <= to_unsigned(16#3FF#, 11);

  -- exp_a_cor + fi(cfType.ExponentBias, 0, cfType.ExponentLength + 1, 0)
  -- 
  -- fi(exp_a_cor + fi(cfType.ExponentBias, 0, cfType.ExponentLength + 1, 0) ...
  --        - shift_length, 0, cfType.ExponentLength + 1, 0)
  Sum1_out1 <= resize(Switch3_out1, 12) + resize(Constant114_out1, 12);

  -- bitsliceget(exp_a_norm, cfType.ExponentLength + 1, 2)
  SubSystem72_out1 <= Sum1_out1(11 DOWNTO 1);

  -- cast(1, like, Exp)
  Constant124_out1 <= to_unsigned(16#001#, 11);

  -- Exp + cast(1, like, Exp)
  Sum59_out1 <= resize(SubSystem72_out1, 12) + resize(Constant124_out1, 12);

  -- dtc
  DataTypeConversion61_out1 <= Sum59_out1(10 DOWNTO 0);

  -- if (bitget(Mant_tmp, Mant_tmp.WordLength) ~= 0) : Exp
  
  Switch426_out1 <= SubSystem72_out1 WHEN SubSystem345_out1 = '0' ELSE
      DataTypeConversion61_out1;

  -- Exponent
  Constant126_out1 <= to_unsigned(16#000#, 11);

  
  Switch_out1 <= Switch426_out1 WHEN Logical_Operator4_out1 = '0' ELSE
      Constant126_out1;

  Logic1_out1_1 <=  NOT aSign;

  
  SubSystem11_out1 <= '1' WHEN aExponent = to_unsigned(16#7FF#, 11) ELSE
      '0';

  Logic2_out1 <= Logic1_out1_1 AND SubSystem11_out1;

  Logic3_out1 <= Logic2_out1 AND SubSystem12_out1;

  -- Exponent
  Constant_out1_52 <= to_unsigned(16#7FF#, 11);

  
  Switch_out1_1 <= Constant_out1_52 WHEN Logic3_out1 = '0' ELSE
      aExponent;

  
  Switch429_out1 <= Switch_out1 WHEN Logical_Operator6_out1 = '0' ELSE
      Switch_out1_1;

  -- bitsliceget(Mant_tmp, Mant_tmp.WordLength - 1, 2)
  SubSystem346_out1 <= Switch425_out1(52 DOWNTO 1);

  -- MantRounded
  Constant125_out1 <= to_unsigned(0, 52);

  -- if (bitget(Mant_tmp, Mant_tmp.WordLength) ~= 0) : MantRounded
  
  Switch427_out1 <= SubSystem346_out1 WHEN SubSystem345_out1 = '0' ELSE
      Constant125_out1;

  -- Mantissa
  Constant127_out1 <= to_unsigned(0, 52);

  
  Switch430_out1 <= Switch427_out1 WHEN Logical_Operator4_out1 = '0' ELSE
      Constant127_out1;

  -- Mantissa
  Constant1_out1_26 <= unsigned'(X"8000000000000");

  
  Switch1_out1 <= Constant1_out1_26 WHEN Logic3_out1 = '0' ELSE
      aMantissa;

  
  Switch431_out1 <= Switch430_out1 WHEN Logical_Operator6_out1 = '0' ELSE
      Switch1_out1;

  -- Combine FP sign, exponent, mantissa into 64 bit word
  nfp_out_pack <= Logical_Operator7_out1 & Switch429_out1 & Switch431_out1;

  nfp_out <= std_logic_vector(nfp_out_pack);

END rtl;

