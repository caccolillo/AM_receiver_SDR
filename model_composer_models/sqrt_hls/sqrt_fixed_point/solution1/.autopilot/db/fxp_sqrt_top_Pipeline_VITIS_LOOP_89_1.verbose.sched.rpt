

================================================================
== Vitis HLS Report for 'fxp_sqrt_top_Pipeline_VITIS_LOOP_89_1'
================================================================
* Date:           Sat Dec 28 19:05:20 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        sqrt_fixed_point
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: artix7
* Target device:  xc7a35ti-csg324-1L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.616 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       32|       32|  0.320 us|  0.320 us|   32|   32|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_89_1  |       30|       30|         2|          1|          1|    30|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.47>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%q_V = alloca i32 1"   --->   Operation 5 'alloca' 'q_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%q_star_V = alloca i32 1"   --->   Operation 6 'alloca' 'q_star_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%s_V = alloca i32 1"   --->   Operation 7 'alloca' 's_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 8 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%zext_ln82_read = read i28 @_ssdm_op_Read.ap_auto.i28, i28 %zext_ln82"   --->   Operation 9 'read' 'zext_ln82_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%zext_ln82_cast = zext i28 %zext_ln82_read"   --->   Operation 10 'zext' 'zext_ln82_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (1.61ns)   --->   "%store_ln0 = store i5 0, i5 %i"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 12 [1/1] (1.61ns)   --->   "%store_ln0 = store i31 %zext_ln82_cast, i31 %s_V"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 13 [1/1] (1.61ns)   --->   "%store_ln0 = store i29 0, i29 %q_star_V"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 14 [1/1] (1.61ns)   --->   "%store_ln0 = store i29 0, i29 %q_V"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 1.61>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body.i"   --->   Operation 15 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%i_1 = load i5 %i" [./fxp_sqrt.h:89]   --->   Operation 16 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 17 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.44ns)   --->   "%icmp_ln89 = icmp_eq  i5 %i_1, i5 30" [./fxp_sqrt.h:89]   --->   Operation 18 'icmp' 'icmp_ln89' <Predicate = true> <Delay = 1.44> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.44> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 30, i64 30, i64 30"   --->   Operation 19 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.86ns)   --->   "%i_2 = add i5 %i_1, i5 1" [./fxp_sqrt.h:89]   --->   Operation 20 'add' 'i_2' <Predicate = true> <Delay = 1.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%br_ln89 = br i1 %icmp_ln89, void %for.body.i.split_ifconv, void %_Z8fxp_sqrtILi28ELi4ELi24ELi8EEvR9ap_ufixedIXT_EXT0_EL9ap_q_mode5EL9ap_o_mode3ELi0EERS0_IXT1_EXT2_ELS1_5ELS2_3ELi0EE.exit.exitStub" [./fxp_sqrt.h:89]   --->   Operation 21 'br' 'br_ln89' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.86ns)   --->   "%sub_ln91 = sub i5 29, i5 %i_1" [./fxp_sqrt.h:91]   --->   Operation 22 'sub' 'sub_ln91' <Predicate = (!icmp_ln89)> <Delay = 1.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.86> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (1.61ns)   --->   "%store_ln89 = store i5 %i_2, i5 %i" [./fxp_sqrt.h:89]   --->   Operation 23 'store' 'store_ln89' <Predicate = (!icmp_ln89)> <Delay = 1.61>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%q_V_load = load i29 %q_V"   --->   Operation 49 'load' 'q_V_load' <Predicate = (icmp_ln89)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%s_V_load = load i31 %s_V"   --->   Operation 50 'load' 's_V_load' <Predicate = (icmp_ln89)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i31P0A, i31 %s_V_1_out, i31 %s_V_load"   --->   Operation 51 'write' 'write_ln0' <Predicate = (icmp_ln89)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i29P0A, i29 %q_V_1_out, i29 %q_V_load"   --->   Operation 52 'write' 'write_ln0' <Predicate = (icmp_ln89)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 53 'ret' 'ret_ln0' <Predicate = (icmp_ln89)> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.61>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%q_V_load_1 = load i29 %q_V"   --->   Operation 24 'load' 'q_V_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%q_star_V_load = load i29 %q_star_V"   --->   Operation 25 'load' 'q_star_V_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%s_V_load_1 = load i31 %s_V"   --->   Operation 26 'load' 's_V_load_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%specloopname_ln1788 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2"   --->   Operation 27 'specloopname' 'specloopname_ln1788' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i31.i32, i31 %s_V_load_1, i32 30"   --->   Operation 28 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%shl_ln1496 = shl i31 %s_V_load_1, i31 1"   --->   Operation 29 'shl' 'shl_ln1496' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln91 = zext i5 %sub_ln91" [./fxp_sqrt.h:91]   --->   Operation 30 'zext' 'zext_ln91' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node s_V_1)   --->   "%r_V = bitconcatenate i31 @_ssdm_op_BitConcatenate.i31.i29.i2, i29 %q_V_load_1, i2 0"   --->   Operation 31 'bitconcatenate' 'r_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node s_V_1)   --->   "%ret_V = or i31 %r_V, i31 1"   --->   Operation 32 'or' 'ret_V' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns) (grouped into LUT with out node s_V_1)   --->   "%r_V_1 = shl i31 %ret_V, i31 %zext_ln91"   --->   Operation 33 'shl' 'r_V_1' <Predicate = true> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.06> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (4.06ns) (out node of the LUT)   --->   "%s_V_1 = sub i31 %shl_ln1496, i31 %r_V_1" [./fxp_sqrt.h:91]   --->   Operation 34 'sub' 's_V_1' <Predicate = true> <Delay = 4.06> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node s_V_2)   --->   "%r_V_2 = bitconcatenate i31 @_ssdm_op_BitConcatenate.i31.i29.i2, i29 %q_star_V_load, i2 0"   --->   Operation 35 'bitconcatenate' 'r_V_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node s_V_2)   --->   "%ret_V_1 = or i31 %r_V_2, i31 3"   --->   Operation 36 'or' 'ret_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node s_V_2)   --->   "%r_V_3 = shl i31 %ret_V_1, i31 %zext_ln91"   --->   Operation 37 'shl' 'r_V_3' <Predicate = true> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 4.06> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 38 [1/1] (4.06ns) (out node of the LUT)   --->   "%s_V_2 = add i31 %r_V_3, i31 %shl_ln1496" [./fxp_sqrt.h:95]   --->   Operation 38 'add' 's_V_2' <Predicate = true> <Delay = 4.06> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.66> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.94ns)   --->   "%s_V_3 = select i1 %tmp, i31 %s_V_2, i31 %s_V_1"   --->   Operation 39 'select' 's_V_3' <Predicate = true> <Delay = 0.94> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln1031 = trunc i29 %q_star_V_load"   --->   Operation 40 'trunc' 'trunc_ln1031' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln1031_1 = trunc i29 %q_V_load_1"   --->   Operation 41 'trunc' 'trunc_ln1031_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (1.38ns)   --->   "%select_ln1031 = select i1 %tmp, i28 %trunc_ln1031, i28 %trunc_ln1031_1"   --->   Operation 42 'select' 'select_ln1031' <Predicate = true> <Delay = 1.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%r_V_5 = bitconcatenate i29 @_ssdm_op_BitConcatenate.i29.i28.i1, i28 %select_ln1031, i1 0"   --->   Operation 43 'bitconcatenate' 'r_V_5' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%q_V_1 = or i29 %r_V_5, i29 1" [./fxp_sqrt.h:80]   --->   Operation 44 'or' 'q_V_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (1.61ns)   --->   "%store_ln89 = store i31 %s_V_3, i31 %s_V" [./fxp_sqrt.h:89]   --->   Operation 45 'store' 'store_ln89' <Predicate = true> <Delay = 1.61>
ST_2 : Operation 46 [1/1] (1.61ns)   --->   "%store_ln89 = store i29 %r_V_5, i29 %q_star_V" [./fxp_sqrt.h:89]   --->   Operation 46 'store' 'store_ln89' <Predicate = true> <Delay = 1.61>
ST_2 : Operation 47 [1/1] (1.61ns)   --->   "%store_ln89 = store i29 %q_V_1, i29 %q_V" [./fxp_sqrt.h:89]   --->   Operation 47 'store' 'store_ln89' <Predicate = true> <Delay = 1.61>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%br_ln89 = br void %for.body.i" [./fxp_sqrt.h:89]   --->   Operation 48 'br' 'br_ln89' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.47ns
The critical path consists of the following:
	'alloca' operation ('i') [7]  (0 ns)
	'load' operation ('i', ./fxp_sqrt.h:89) on local variable 'i' [16]  (0 ns)
	'add' operation ('i', ./fxp_sqrt.h:89) [20]  (1.86 ns)
	'store' operation ('store_ln89', ./fxp_sqrt.h:89) of variable 'i', ./fxp_sqrt.h:89 on local variable 'i' [45]  (1.61 ns)

 <State 2>: 6.62ns
The critical path consists of the following:
	'load' operation ('q_V_load_1') on local variable 'q.V' [23]  (0 ns)
	'or' operation ('ret.V') [32]  (0 ns)
	'shl' operation ('r.V') [33]  (0 ns)
	'sub' operation ('s.V', ./fxp_sqrt.h:91) [34]  (4.06 ns)
	'select' operation ('s.V') [39]  (0.944 ns)
	'store' operation ('store_ln89', ./fxp_sqrt.h:89) of variable 's.V' on local variable 's.V' [46]  (1.61 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
